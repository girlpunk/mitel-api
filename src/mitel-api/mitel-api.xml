<?xml version="1.0"?>
<doc>
    <assembly>
        <name>mitel-api</name>
    </assembly>
    <members>
        <member name="T:mitelapi.Events.EventDECTAuthCodeCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed.
            To get this event the client has to subscribe to SystemCnf.
            This is allowed if the client has at least one of the following permissions: AllCnfRead.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventDECTAuthCodeCnf.Ac">
            <summary>
            Changed DECT authentication code
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventLicenseCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed.
            To get this event the client has to subscribe to SystemState.
            This is allowed if the client has at least one of the following permissions: AllCnfRead.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.Type">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.State">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.Violation">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.Latency">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.Park">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.LicenseRFPs">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.SysLicense">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.MsgLicense">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Events.EventLicenseCnf.LocLicense">
            <inheritdoc />
        </member>
        <member name="T:mitelapi.Events.EventMessageConfirmation">
            <summary>
            This event is sent by the OM AXI when a notification session containing the type MessageConfirmation is active for a DECT phone and when there is a confirmation for a message of this DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.SendTime">
            <summary>
            Original send time.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.Id">
            <summary>
            Original message ID.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.FromAddr">
            <summary>
            Sender address of confirmed message. This is the destination of the confirmation.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.ToAddr">
            <summary>
            Recipient address of confirmed message.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.ConfTime">
            <summary>
            Time of confirmation, same format as sendTime.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageConfirmation.Confirmation">
            <summary>
            Confirmation for this message.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventMessageProgress">
            <summary>
            This event is sent by OM AXI when the message queue of a DECT phone experiences some kind of progress.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageProgress.SendTime">
            <summary>
            Original send time of the message.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageProgress.Id">
            <summary>
            Message ID.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageProgress.ToAddr">
            <summary>
            Original recipient address of the message.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageProgress.Event">
            <summary>
            The kind of progress.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventMessageQueueEmpty">
            <summary>
            This event is sent by OM AXI when the message queue of a DECT phone gets empty.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageQueueEmpty.Ppn">
            <summary>
            The DECT phone which�s queue got empty.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventMessageSend">
            <summary>
            This event is sent by the OM AXI when a notification session containing the type MessageSend is active for a DECT phone or scheme and when there is a message sent from this DECT phone or to this address schema.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventMessageSend.Msg">
            <summary>
            Message to be sent.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPermissionChange">
            <summary>
            This event is sent by OM AXI when the OMM permissions have changed (e. g. change license conditions).
            To get this event the client has to subscribe to SystemState.
            This is allowed if the client has at least one of the following permissions: AllCnfRead.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPositionHistory">
            <summary>
            This event is sent by OM AXI when information about the DECT phone position history has arrived.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionHistory.Ppn">
            <summary>
            PPN being located
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionHistory.MultiFrame">
            <summary>
            Current multiframe number (1 increment per 160 ms)
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionHistory.Locations">
            <summary>
            A list of the last know locations, the first one is the latest
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPositionInfo">
            <summary>
            This event is sent by OM AXI when information about the current DECT phone position has arrived.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionInfo.Ppn">
            <summary>
            PPN being located
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionInfo.Visibility">
            <summary>
            A list of all RFPs currently visible
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPositionRequest">
            <summary>
            This event is sent by OM AXI when a user wants to locate another DECT phone using his DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionRequest.Num">
            <summary>
            Number of user who wants to locate somebody
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionRequest.Name">
            <summary>
            Name of the user who wants to locate somebody, optional and for informational purposes only
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionRequest.TargetNum">
            <summary>
            Number of user who has to be located
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionRequest.TargetName">
            <summary>
            Name of the user who has to be located, optional and for informational purposes only.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPositionTrack">
            <summary>
            This event is sent by OM AXI when DECT phone position tracking information has arrived.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionTrack.Ppn">
            <summary>
            PPN being tracked
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPositionTrack.Id">
            <summary>
            ID of current RFP
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPPCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed.
            To get this event the client has to subscribe to PPCnf. 
            This is allowed if the client has at least one of the following permissions: AllCnfRead. 
            The notification contains all attributes which have been changed. 
            This event is also sent upon creation of a record. 
            If the record has been deleted, this event is sent with only a uid in the user element and the attribute deleted="1". 
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPCnf.User">
            <summary>
            Changed attributes
            </summary>        
        </member>
        <member name="P:mitelapi.Events.EventPPCnf.DeletedUser">
            <summary>
            boolean, default false  „1” or “true”, if this data set has been deleted 
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPCnf.DeletedDevice">
            <summary>
            boolean, default false  „1” or “true”, if this data set has been deleted 
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPPDevCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed. 
            To get this event the client has to subscribe to PPDevCnf. 
            This is allowed if the client has at least one of the following permissions: AllCnfRead.
            The notification contains all attributes which have been changed. 
            This event is also sent upon creation of a record. 
            If the record has been deleted, this event is sent with only a ppn in the pp element and the attribute deleted="1". 
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPDevCnf.PP">
            <summary>
            Changed attributes
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPDevCnf.Deleted">
            <summary>
            boolean, default false  „1” or “true”, if this data set has been deleted 
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPPState">
            <summary>
            This event is sent by OM AXI telephony state of a DECT phone has changed.
            To get this event the client has to subscribe to one of PPState, PPDevState, PPCallState, PPBtState,
            PPSipState, PPCallStateCalling, PPCallStatePaging, PPCallStateConnected, PPCallStateIdle, PPCallStateNone,
            PPDevStateOnHook, PPDevStateSilentCharging, PPDevStateBatteryLevel, PPDevStateSwVersion,
            PPSipStateRegEvent, PPSipStateEndEvent, PPSipStateNotifyEvent, PPSipStateRegistered,
            PPSipStateServerType, PPSipStateServerAddr, PPSipStateServerPort or PPDevStateCharging.
            This is allowed if the client has at least one of the following permissions: Monitoring.
            When a client wants to stay updated about the telephony state of a DECT phone, it can subscribe to notifications of type PPCallState for one or more DECT phones.
            Each time one of these DECT phones changes its state (depending on the current subscription and DECT phone state change), an event of this type is sent by OM AXI.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.Ppn">
            <summary>
            PPN being monitored
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.OnHook">
            <summary>
            �1� or �true�, if this DECT phone is in onHook state
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.SilentCharging">
            <summary>
            �1� or �true�, if this DECT phone is in silent charging state
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.BatteryLevel">
            <summary>
            Current percentage value (0 � 100%) of the DECT phones battery state
            The value will only be sent when user monitoring is activated for the user of this DECT phone device.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.SwVersion">
            <summary>
            Current DECT phones software version.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.CallState">
            <summary>
            Current call state info of the user of this DECT phone
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.SipEvent">
            <summary>
            New SIP event info for the user of this DECT phone
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.Registered">
            <summary>
            �1� or �true�, if this DECT phone has successfully performed a SIP registration.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.RegServerType">
            <summary>
            Used SIP registrar server the user is registered. One of �None�, �Primary�, �Secondary� or �Tertiary�.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.RegServerAddr">
            <summary>
            Used SIP registrar server address the user is registered.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.RegServerPort">
            <summary>
            Used SIP registrar server port the user is registered.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.IsUsbConnected">
            <summary>
            �1� or �true�, if this DECT phone is connected to USB else �0� or �false�.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPState.IsInCharger">
            <summary>
            �1� or �true�, if this DECT phone is beeing charged else �0� or �false�.
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventPPUserCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed.
            To get this event the client has to subscribe to PPUserCnf. 
            This is allowed if the client has at least one of the following permissions: AllCnfRead. 
            The notification contains all attributes which have been changed. 
            This event is also sent upon creation of a record. 
            If the record has been deleted, this event is sent with only a uid in the user element and the attribute deleted="1". 
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventPPUserCnf.User">
            <summary>
            Changed attributes
            </summary>        
        </member>
        <member name="P:mitelapi.Events.EventPPUserCnf.Deleted">
            <summary>
            boolean, default false  „1” or “true”, if this data set has been deleted 
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventRFPCnf">
            <summary>
            This event is sent by OM AXI when this configuration item has been changed. Refer to chapter 4.1.4
            on how to set up a notification session.
            To get this event the client has to subscribe to RFPCnf.This is allowed if the client has at least one of the
            following permissions: AllCnfRead.
            Configuration items are all attributes which are not selected with withState or with withDetails.
            The notification contains all attributes which have been changed. Even attributes with default values will
            always be contained explicitly if their value has changed.
            This event is also sent upon creation of an RFP. If the RFP has been deleted, this event is sent with only
            an rfpId in the rfp element and the attribute deleted="1".
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventRFPCnf.Rfp">
            <summary>
            Contains all attributes which have been changed.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventRFPCnf.Deleted">
            <summary>
            �1� or �true�, if this data set has been deleted
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventRFPState">
            <summary>
            This event is sent by OM AXI when a change of a state attribute happened. Refer to chapter 4.1.4 on how to set
            up a notification session.
            To get this event the client has to subscribe to RFPState.This is allowed if the client has at least one of the
            following permissions: AllCnfRead.
            Items belonging to this group are those which are selected with withState.
            The notification contains all attributes which have been changed.Even attributes with default values will always
            be contained explicitly if their value has changed.
            This event is not sent upon deletion of an RFP.
            /// </summary>
        </member>
        <member name="P:mitelapi.Events.EventRFPState.Id">
            <summary>
            Id of the RFP
            </summary>        
        </member>
        <member name="P:mitelapi.Events.EventRFPState.rfp">
            <summary>
            Contains all attributes which have been changed
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventRFPSyncQuality">
            <summary>
            This event is sent by OM AXI each time when SYNC quality data of at least one RFP changes. Refer to chapter
            4.1.4 on how to set up a notification session.
            To get this event the client has to subscribe to RFPSyncQuality.This is allowed if the client has at least one of
            the following permissions: Monitoring.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventRFPSyncQuality.SyncQuality">
            <summary>
            SYNC quality data records
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventRFPSyncRel">
            <summary>
            This event is sent by OM AXI each time when the set of synchronization relations of an RFP changes. Refer to
            chapter 4.1.4 on how to set up a notification session.
            To get this event the client has to subscribe to RFPSync.This is allowed if the client has at least one of the
            following permissions: Monitoring.
            Note that this event does only report changed forward relations. It is sent if there is a subscription for at least one
            of the two RFPs involved into the relation.
            If a forward relation of one RFP changes, the client must imply a change of a backward relation of the other RFP.
            When an RFP state changes from Synced to any other state, the client must imply that all relations got lost in
            both directions. For this reason the client should also evaluate EventRFPState (see 4.42.8).
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventRFPSyncRel.Id">
            <summary>
            RFP-ID
            </summary>        
        </member>
        <member name="P:mitelapi.Events.EventRFPSyncRel.Forward">
            <summary>
            Relations to neighbor RFPs, if available
            </summary>
        </member>
        <member name="T:mitelapi.Events.EventStbStateChange">
            <summary>
            This event is sent by OM AXI when the OMM standby state has changed.
            To get this event the client has to subscribe to SystemState.
            This is allowed if the client has at least one of the following permissions: AllCnfRead.
            </summary>
        </member>
        <member name="P:mitelapi.Events.EventStbStateChange.StandbyState">
            <inheritdoc/>
        </member>
        <member name="P:mitelapi.Events.EventStbStateChange.StandbyAddress">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.Type">
            <summary>
            Type of license
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.State">
            <summary>
            State of any license violation.
            <remarks>
            <para>
            In the license non violated state <see cref="F:mitelapi.Types.LicenseViolation.NoLicense"/> or <see cref="F:mitelapi.Types.LicenseViolation.ActiveLicense"/> the <see cref="P:mitelapi.Interfaces.ILicenseCnf.Latency"/> counter counts up, otherwise it counts down until to the maximum value of 43200 minutes (30 days).
            </para>
            </remarks>
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.Violation">
            <summary>
            License violation reasons, when the <see cref="P:mitelapi.Interfaces.ILicenseCnf.State"/> is not <see cref="F:mitelapi.Types.LicenseViolation.NoLicense"/> and not <see cref="F:mitelapi.Types.LicenseViolation.ActiveLicense"/>.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.Latency">
            <summary>
            Grace period time value in minutes, how long the system will work with a violated license
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.Park">
            <summary>
            PARK for the license keys.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.LicenseRFPs">
            <summary>
            Up to three data sets for license RFPs
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.SysLicense">
            <summary>
            OMM system license.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.MsgLicense">
            <summary>
            OMM messaging license.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.ILicenseCnf.LocLicense">
            <summary>
            OMM locating license.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.IStbState.StandbyState">
            <summary>
            State of the OMM standby feature.
            </summary>
        </member>
        <member name="P:mitelapi.Interfaces.IStbState.StandbyAddress">
            <summary>
            In case of OMM standby is active: IP address of the other OMM
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseRequest.Seq">
            <summary>
            The client may give a unique sequence number to each request it sends.
            The response to the request will contain the same sequence number.
            This can be used by the client to associate responses to the corresponding requests.
            <para/>
            The sequence number (seq) is returned by OM AXI transparently in the response. The client may use any kind of cookie which is useful for it.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseResponse.Seq">
            <summary>
            Sequence number taken from the original request. Only filled in if the original request also had a sequence number.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseResponse.ErrorCode">
            <summary>
            Fixed string codes described in the documentation for the particular requests.
            If this attribute is absent it implies that no error occurred.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseResponse.Info">
            <summary>
            This field may contain additional information about an error.
            It is free style text in English and used mainly to track errors.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseResponse.ErrorBad">
            <summary>
            In case of EInval, EMissing or ETooLong: Name of the invalid attribute or element
            </summary>
        </member>
        <member name="P:mitelapi.Messages.BaseResponse.ErrorMaxLength">
            <summary>
            In case of ETooLong: Maximal length (in characters, not bytes) expected for the erroneous attribute.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.CancelMessage.SendTime">
            <summary>
            Original send time of the message to be cancelled.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.CancelMessage.Id">
            <summary>
            Message ID.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.CancelMessage.ToAddr">
            <summary>
            Recipient address of the message to be cancelled.
            Must have the same scheme as the original message ( e. g. "tel:" or "ppn:").
            </summary>
        </member>
        <member name="T:mitelapi.Messages.CreateRFP">
            <summary>
            The client can send this request to OM AXI to create a new RFP data set. Refer to chapter 4.42.1 for information
            about which attributes of an RFP have to be set in a create request.
            Consider the license restrictions for this command (see 5.5).
            If there is no id assigned by the client, the OMM will choose one. If the client assigns an id, it must not exist yet.
            Note that attributes describing transient properties are ignored, e. g. connected.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.CreateRFP.Rfp">
            <summary>
            Data of RFP to chang
            </summary>
        </member>
        <member name="T:mitelapi.Messages.CreateRFPResp">
            <summary>
            If the RFP creation was successful, the reply contains all RFP attributes which GetRFP would return, but no state
            information.Some data fields may be changed or set by the OMM.If the creation fails, the OM AXI returns an
            error code.If applicable, the attributes will contain the data fields which lead to the error (which was wrong,
            missing etc.).
            </summary>
        </member>
        <member name="P:mitelapi.Messages.DeleteMessage.SendTime">
            <summary>
            Original send time of the message to be deleted.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.DeleteMessage.Id">
            <summary>
            Message ID.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.DeleteMessage.ToAddr">
            <summary>
            Recipient address of the message to be deleted.
            Must have the same scheme as the original message (e.g. "tel:" or "ppn:").
            </summary>
        </member>
        <member name="T:mitelapi.Messages.DeleteRFP">
            <summary>
            With this request the client can delete an RFP record in the OMM. The key used to delete an RFP is its id.
            Consider the license restrictions for this command (see 5.5).
            Following fields are defined for the request DeleteRFP in addition to the common attributes:
            </summary>
        </member>
        <member name="F:mitelapi.Messages.DeleteRFP.Id">
            <summary>
            id of RFP to delete
            </summary>
        </member>
        <member name="T:mitelapi.Messages.DeleteRFPCaptureList">
            <summary>
            A client can delete the list with all captured RFPs.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.DeleteRFPCaptureListResp">
            <summary>
            The reply to this request is an object called DeleteRFPCaptureListResp.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.DeleteRFPCaptureListElem">
            <summary>
            A client can delete one captured RFP from the captured RFPs list.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.DeleteRFPCaptureListElemResp">
            <summary>
            The reply to this request is an object called DeleteRFPCaptureListElemResp.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetDECTSubscriptionMode">
            <summary>
            With this request the client can query the current state of the DECT subscription mode.
            Following fields are defined for this request in addition to the common attributes
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetDECTSubscriptionModeResp">
            <summary>
            The reply to this request is an object called GetDECTSubscriptionModeResp. It contains following fields in
            addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetDECTSubscriptionModeResp.Mode">
            <summary>
            Same modes as defined in chapter 4.30.2
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetDevAutoCreate">
            <summary>
            With this request the client can query if auto-create devices on DECT subscription is enabled.
            Following fields are defined for this request in addition to the common attributes:
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetDevAutoCreateResp">
            <summary>
            The reply is an object called GetDevAutoCreateResp. It contains following fields in addition to the common
            attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetDevAutoCreateResp.Enable">
            <summary>
            „1” or “true”, if auto-create is enabled
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetLicense">
            <summary>
            With this request the client can query the license configuration of the OMM.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.Type">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.State">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.Violation">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.Latency">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.Park">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.LicenseRFPs">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.SysLicense">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.MsgLicense">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetLicenseResp.LocLicense">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetPPState.Ppn">
            <summary>
            Portable part number being requested.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.Ppn">
            <summary>
            Portable part number being requested.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.OnHook">
            <summary>
            true if this DECT phone is in onHook state.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.SilentCharging">
            <summary>
            true if this DECT phone is in silent charging state.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.CallState">
            <summary>
            Current call state info of the user of this DECT phone
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.BatteryLevel">
            <summary>
            Current percentage value (0 – 100%) of the DECT phones battery state.
            Missing, when the DECT phones battery state is unknown or cannot be detected.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.Bluetooth">
            <summary>
            true if this DECT phone is in Bluetooth operational mode.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.SwVersion">
            <summary>
            Current DECT phones software version.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.Registered">
            <summary>
            true if this DECT phone is in Bluetooth operational mode.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.RegServerType">
            <summary>
            Used SIP registrar server the user is registered. One of “None”, “Primary”, “Secondary” or “Tertiary”.
            Only contained, if a user is assigned to this DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.RegServerAddr">
            <summary>
            Used SIP registrar server address the user is registered.
            Only contained, if a user is assigned to this DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPPStateResp.RegServerPort">
            <summary>
            Used SIP registrar server port the user is registered.
            Only contained, if a user is assigned to this DECT phone.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetPublicKey">
            <summary>
            With this request the client can obtain the public RSA key to be used to encrypt certain attributes.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPublicKeyResp.Modulus">
            <summary>
            Hexadecimal encoded public modulus n
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetPublicKeyResp.Exponent">
            <summary>
            Hexadecimal encoded public exponent e
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFP">
            <summary>
            With this request the client can query information about one or more RFPs from the OMM.
            The request contains an RFP-ID from which starting subsequent data sets are to be fetched.The client can
            chose the number of records returned.If less than this number of data sets are returned or ENoEnt, the client
            knows that it reached end of file.
            RFP-IDs usually start at 0, but possibly not all numbers are assigned, i.e.the data set numbering may not be
            contiguous.
            Only attributes of the RFP used on the present OMM version and accessible with the current user’s permissions
            are returned. Refer to chapter 4.48 for details.
            The responses are ordered by id, starting with the smallest.
            If the client asked for a certain number records but the given id does not exist, subsequent entries will be
            returned.
            If the client does not specify the number of records to be returned (maxRecords = "0", default), the given id has to
            match to a record exactly. If there is a record with this id, it is returned, otherwise ENoEnt.
            To acquire all data sets, one could send GetRFP (id = "0", maxRecords = "20"). If the response contains 20
            records, take the last id plus one and send another GetRFP. Repeat this until you get less than 20 records back
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFP.Id">
            <summary>
            First RFP id of RFPs to get
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFP.MaxRecords">
            <summary>
            Maximal number of records to return. Not more than 20
            allowed.For special case 0 refer to text.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFP.WithState">
            <summary>
            „1” or “true”, if state information is also wanted
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFP.WithDetails">
            <summary>
            „1” or “true”, if details are also wanted.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPResp">
            <summary>
            The reply to GetRFP is an object called GetRFPResp. It contains following element in addition to the common
            attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPResp.RFPs">
            <summary>
            RFP record, if found
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPCapture">
            <summary>
            A client can get a list with all captured but not configured RFPs.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPCaptureResp">
            <summary>
            The reply to this request is an object called GetRFPCaptureResp. It contains following element in addition to the
            common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPCaptureResp.Enable">
            <summary>
            „1” or “true”, if auto-create is enabled
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPCaptureList">
            <summary>
            A client can get a list with all captured but not configured RFPs.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPCaptureListResp">
            <summary>
            The reply to this request is an object called GetRFPCaptureListResp
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPCaptureListResp.rfp">
            <summary>
            All captured RFP records, if any
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPStatistic">
            <summary>
            This request is sent from the client to the OMM.
            With this request the client can query the statistic counter of an RFP.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatistic.Id">
            <summary>
            Unique RFP identifier. The numbering starts at 0
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatistic.MaxRecords">
            <summary>
            Maximal number of records to return. Not more than 20 allowed.
            If maxRecord is equal 0, only the record of the RFP addressed by id should be fetched
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatistic.RecordSet">
            <summary>
            Record set to read
            Record 0 identifies the overall counter, 1 the current week, 2 the week before the current week and so on.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPStatisticResp">
            <summary>
            
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatisticResp.Data">
            <summary>
            Summary of the RFP statistic elements.
            The number and meaning of the elements can be read by using the GetRFPStatisticConfig Request.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPStatisticConfig">
            <summary>
            This request is sent from the client to the OMM.
            With this request the client can query information about the RFP statistic elements. 
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatisticConfigResp.Head">
            <summary>
            Summary header of the RFP statistic records
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPStatisticConfigResp.Name">
            <summary>
            Details of record-elements
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPSync">
            <summary>
            With this request a client can get the current synchronization state of an RFP.
            Following fields are defined for the request GetRFPSync in addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSync.Id">
            <summary>
            RFP id
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPSyncResp">
            <summary>
            The reply to GetRFPSync is an object called GetRFPSyncResp. It contains following attributes in addition to the
            common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncResp.Id">
            <summary>
            RFP id
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncResp.SyncState">
            <summary>
            State info
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncResp.Forward">
            <summary>
            Relations to neighbor RFPs, if available
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncResp.Backward">
            <summary>
            Relations from neighbor RFPs, if available
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPSyncQuality">
            <summary>
            With this request a client can get the current SYNC quality data list of RFPs.
            Following fields are defined for the request GetRFPSyncQuality in addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncQuality.Id">
            <summary>
            First RFP id of RFP SYNC quality data records to get
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncQuality.MaxRecords">
            <summary>
            Maximal number of records to return. Not more than 20
            allowed.For special case 0 refer to text.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetRFPSyncQualityResp">
            <summary>
            The reply to GetRFPSyncQuality is an object called GetRFPSyncQualityResp. It contains following attributes in
            addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetRFPSyncQualityResp.SyncQuality">
            <summary>
            All found SYNC quality data records
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetStbState">
            <summary>
            With this requests the client can ask for information about the current OMM standby state.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.GetStbStateResp">
            <summary>
            Contains information about the OMM standby feature.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetStbStateResp.StandbyState">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Messages.GetStbStateResp.StandbyAddress">
            <inheritdoc />
        </member>
        <member name="T:mitelapi.Messages.GetVersions">
            <summary>
            This request is sent from the client to the OMM to request the versions of requests/responses or events.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ActivateRemoteSystemDump">
            <summary>
            Version string of the request/response elements ‘ActivateRemoteSystemDump'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.AddUserToConference">
            <summary>
            Version string of the request/response elements ‘AddUserToConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CancelMessage">
            <summary>
            Version string of the request/response elements ‘CancelMessage'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ChangeUserInConference">
            <summary>
            Version string of the request/response elements ‘ChangeUserInConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateAccount">
            <summary>
            Version string of the request/response elements ‘CreateAccount'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateACLEntry">
            <summary>
            Version string of the request/response elements ‘CreateACLEntry'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateAlarmTrigger">
            <summary>
            Version string of the request/response elements ‘CreateAlarmTrigger'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateBluetoothBeacon">
            <summary>
            Version string of the request/response elements ‘CreateBluetoothBeacon'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateConference">
            <summary>
            Version string of the request/response elements ‘CreateConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateDigitTreatment">
            <summary>
            Version string of the request/response elements ‘CreateDigitTreatment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateFixedPP">
            <summary>
            Version string of the request/response elements ‘CreateFixedPP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateLDAP">
            <summary>
            Version string of the request/response elements ‘CreateLDAP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreatePPDev">
            <summary>
            Version string of the request/response elements ‘CreatePPDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreatePPUser">
            <summary>
            Version string of the request/response elements ‘CreatePPUser'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateRFP">
            <summary>
            Version string of the request/response elements ‘CreateRFP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateSite">
            <summary>
            Version string of the request/response elements ‘CreateSite'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateVideoDev">
            <summary>
            Version string of the request/response elements ‘CreateVideoDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateWLANProfile">
            <summary>
            Version string of the request/response elements ‘CreateWLANProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.CreateXMLApplication">
            <summary>
            Version string of the request/response elements ‘CreateXMLApplication'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DBBackupToUSB">
            <summary>
            Version string of the request/response elements ‘DBBackupToUSB'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DBRestoreFromUSB">
            <summary>
            Version string of the request/response elements ‘DBRestoreFromUSB'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteAccount">
            <summary>
            Version string of the request/response elements ‘DeleteAccount'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteACLEntry">
            <summary>
            Version string of the request/response elements ‘DeleteACLEntry'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteAlarmTrigger">
            <summary>
            Version string of the request/response elements ‘DeleteAlarmTrigger'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteBluetoothBeacon">
            <summary>
            Version string of the request/response elements ‘DeleteBluetoothBeacon'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteConference">
            <summary>
            Version string of the request/response elements ‘DeleteConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteDigitTreatment">
            <summary>
            Version string of the request/response elements ‘DeleteDigitTreatment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteEventLogBuffer">
            <summary>
            Version string of the request/response elements ‘DeleteEventLogBuffer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteLDAP">
            <summary>
            Version string of the request/response elements ‘DeleteLDAP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteMessage">
            <summary>
            Version string of the request/response elements ‘DeleteMessage'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeletePPDev">
            <summary>
            Version string of the request/response elements ‘DeletePPDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeletePPUser">
            <summary>
            Version string of the request/response elements ‘DeletePPUser'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteRFP">
            <summary>
            Version string of the request/response elements ‘DeleteRFP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteRFPCaptureList">
            <summary>
            Version string of the request/response elements ‘DeleteRFPCaptureList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteRFPCaptureListElem">
            <summary>
            Version string of the request/response elements ‘DeleteRFPCaptureListElem'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteSite">
            <summary>
            Version string of the request/response elements ‘DeleteSite'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteUserFromConference">
            <summary>
            Version string of the request/response elements ‘DeleteUserFromConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteVideoDev">
            <summary>
            Version string of the request/response elements ‘DeleteVideoDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteWLANProfile">
            <summary>
            Version string of the request/response elements ‘DeleteWLANProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.DeleteXMLApplication">
            <summary>
            Version string of the request/response elements ‘DeleteXMLApplication'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAccountCnf">
            <summary>
            Version string of the request/response elements ‘EventAccountCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAccountSummary">
            <summary>
            Version string of the request/response elements ‘EventAccountSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventACLCnf">
            <summary>
            Version string of the request/response elements ‘EventACLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAddUserToConference">
            <summary>
            Version string of the request/response elements ‘EventAddUserToConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAdvancedSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventAdvancedSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAlarmCallProgress">
            <summary>
            Version string of the request/response elements ‘EventAlarmCallProgress'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAlarmTrigger">
            <summary>
            Version string of the request/response elements ‘EventAlarmTrigger'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAlarmTriggerCnf">
            <summary>
            Version string of the request/response elements ‘EventAlarmTriggerCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAutoDBBackupCnf">
            <summary>
            Version string of the request/response elements ‘EventAutoDBBackupCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventAutoDBBackupFileNameCnf">
            <summary>
            Version string of the request/response elements ‘EventAutoDBBackupFileNameCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBasicSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventBasicSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBackupSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventBackupSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBluetoothClientStatistic">
            <summary>
            Version string of the request/response elements ‘EventBluetoothClientStatistic'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBluetoothBeaconCnf">
            <summary>
            Version string of the request/response elements ‘EventBluetoothBeaconCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBluetoothBeaconSummary">
            <summary>
            Version string of the request/response elements ‘EventBluetoothBeaconSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBluetoothGlobalSettingsCnf">
            <summary>
            Version string of the request/response elements ‘EventBluetoothGlobalSettingsCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventBluetoothSensitivityCnf">
            <summary>
            Version string of the request/response elements ‘EventBluetoothSensitivityCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventChangeUserInConference">
            <summary>
            Version string of the request/response elements ‘EventChangeUserInConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventCreateConference">
            <summary>
            Version string of the request/response elements ‘EventCreateConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventConferenceRelease">
            <summary>
            Version string of the request/response elements ‘EventConferenceRelease'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventConferenceRequest">
            <summary>
            Version string of the request/response elements ‘EventConferenceRequest'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventConferenceRoomCnf">
            <summary>
            Version string of the request/response elements ‘EventConferenceRoomCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventConferenceServerSIP">
            <summary>
            Version string of the request/response elements ‘EventConferenceServerSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventConfigURLCnf">
            <summary>
            Version string of the request/response elements ‘EventConfigURLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventCoreDumpURLCnf">
            <summary>
            Version string of the request/response elements ‘EventCoreDumpURLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDbTransferState">
            <summary>
            Version string of the request/response elements ‘EventDbTransferState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTAuthCodeCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTAuthCodeCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTEncryptionCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTEncryptionCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTPagingAreaSizeCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTPagingAreaSizeCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTPowerLimitCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTPowerLimitCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTPpSettingsCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTPpSettingsCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTRegDomainCnf">
            <summary>
            Version string of the request/response elements ‘EventDECTRegDomainCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDECTSubscriptionMode">
            <summary>
            Version string of the request/response elements ‘EventDECTSubscriptionMode'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDeleteConference">
            <summary>
            Version string of the request/response elements ‘EventDeleteConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDeleteUserFromConference">
            <summary>
            Version string of the request/response elements ‘EventDeleteUserFromConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDevAutoCreateCnf">
            <summary>
            Version string of the request/response elements ‘EventDevAutoCreateCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDigitTreatmentCnf">
            <summary>
            Version string of the request/response elements ‘EventDigitTreatmentCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventDTMFCnf">
            <summary>
            Version string of the request/response elements ‘EventDTMFCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventEULAConfirmCnf">
            <summary>
            Version string of the request/response elements ‘EventEULAConfirmCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventEventLogEntry">
            <summary>
            Version string of the request/response elements ‘EventEventLogEntry'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventFACCnf">
            <summary>
            Version string of the request/response elements ‘EventFACCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventFACPrefixCnf">
            <summary>
            Version string of the request/response elements ‘EventFACPrefixCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventFreeConferenceChannels">
            <summary>
            Version string of the request/response elements ‘EventFreeConferenceChannels'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventHealthState">
            <summary>
            Version string of the request/response elements ‘EventHealthState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventIMACnf">
            <summary>
            Version string of the request/response elements ‘EventIMACnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventIntercomCallHandlingSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventIntercomCallHandlingSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventLDAPCnf">
            <summary>
            Version string of the request/response elements ‘EventLDAPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventLicenseCnf">
            <summary>
            Version string of the request/response elements ‘EventLicenseCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventLicensedCodecLines">
            <summary>
            Version string of the request/response elements ‘EventLicensedCodecLines'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventLicenseFile">
            <summary>
            Version string of the request/response elements ‘EventLicenseFile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventLicenseServerListCnf">
            <summary>
            Version string of the request/response elements ‘EventLicenseServerListCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventMessageConfirmation">
            <summary>
            Version string of the request/response elements ‘EventMessageConfirmation'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventMessageProgress">
            <summary>
            Version string of the request/response elements ‘EventMessageProgress'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventMessageQueueEmpty">
            <summary>
            Version string of the request/response elements ‘EventMessageQueueEmpty'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventMessageSend">
            <summary>
            Version string of the request/response elements ‘EventMessageSend'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventNTPServerCnf">
            <summary>
            Version string of the request/response elements ‘EventNTPServerCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventOMMCertificateCnf">
            <summary>
            Version string of the request/response elements ‘EventOMMCertificateCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventOMPURLCnf">
            <summary>
            Version string of the request/response elements ‘EventOMPURLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventNetParamsCnf">
            <summary>
            Version string of the request/response elements ‘EventNetParamsCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPARKCnf">
            <summary>
            Version string of the request/response elements ‘EventPARKCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPARKFromServerResult">
            <summary>
            Version string of the request/response elements ‘EventPARKFromServerResult'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPBXEnrolmentCnf">
            <summary>
            Version string of the request/response elements ‘EventPBXEnrolmentCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPermissionChange">
            <summary>
            Version string of the request/response elements ‘EventPermissionChange'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPortRangeSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventPortRangeSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPositionHistory">
            <summary>
            Version string of the request/response elements ‘EventPositionHistory'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPositionInfo">
            <summary>
            Version string of the request/response elements ‘EventPositionInfo'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPositionRequest">
            <summary>
            Version string of the request/response elements ‘EventPositionRequest'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPositionTrack">
            <summary>
            Version string of the request/response elements ‘EventPositionTrack'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPpProfileCnf">
            <summary>
            Version string of the request/response elements ‘EventPpProfileCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPDevCnf">
            <summary>
            Version string of the request/response elements ‘EventPPDevCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPDevSummary">
            <summary>
            Version string of the request/response elements ‘EventPPDevSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPFirmwareUpdateCnf">
            <summary>
            Version string of the request/response elements ‘EventPPFirmwareUpdateCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPFirmwareUpdateOverview">
            <summary>
            Version string of the request/response elements ‘EventPPFirmwareUpdateOverview'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPFirmwareUpdateStatus">
            <summary>
            Version string of the request/response elements ‘EventPPFirmwareUpdateStatus'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPFirmwareURLCnf">
            <summary>
            Version string of the request/response elements ‘EventPPFirmwareURLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPLoginVariantCnf">
            <summary>
            Version string of the request/response elements ‘EventPPLoginVariantCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPState">
            <summary>
            Version string of the request/response elements ‘EventPPState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPTransaction">
            <summary>
            Version string of the request/response elements ‘EventPPTransaction'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPUserCnf">
            <summary>
            Version string of the request/response elements ‘EventPPUserCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPPUserSummary">
            <summary>
            Version string of the request/response elements ‘EventPPUserSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventPreserveUserDeviceRelationCnf">
            <summary>
            Version string of the request/response elements ‘EventPreserveUserDeviceRelationCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventReadyForConferencing">
            <summary>
            Version string of the request/response elements ‘EventReadyForConferencing'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRegistrationTrafficShapingCnf">
            <summary>
            Version string of the request/response elements ‘EventRegistrationTrafficShapingCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRemoteAccessCnf">
            <summary>
            Version string of the request/response elements ‘EventRemoteAccessCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRemoteSystemDumpCnf">
            <summary>
            Version string of the request/response elements ‘EventRemoteSystemDumpCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRestrictedSubscriptionDurationCnf">
            <summary>
            Version string of the request/response elements ‘EventRestrictedSubscriptionDurationCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPCnf">
            <summary>
            Version string of the request/response elements ‘EventRFPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPCapture">
            <summary>
            Version string of the request/response elements ‘EventRFPCapture'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPCaptureCnf">
            <summary>
            Version string of the request/response elements ‘EventRFPCaptureCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPConnectAttempt">
            <summary>
            Version string of the request/response elements ‘EventRFPConnectAttempt'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPDetails">
            <summary>
            Version string of the request/response elements ‘EventRFPDetails'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPIpQuality">
            <summary>
            Version string of the request/response elements ‘EventRFPIpQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPMCnf">
            <summary>
            Version string of the request/response elements ‘EventRFPMCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPMediaStreamQuality">
            <summary>
            Version string of the request/response elements ‘EventRFPMediaStreamQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPState">
            <summary>
            Version string of the request/response elements ‘EventRFPState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPSummary">
            <summary>
            Version string of the request/response elements ‘EventRFPSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPSyncQuality">
            <summary>
            Version string of the request/response elements ‘EventRFPSyncQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRFPSyncRel">
            <summary>
            Version string of the request/response elements ‘EventRFPSyncRel'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRTPCnf">
            <summary>
            Version string of the request/response elements ‘EventRTPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventRTPConferenceStreamChg">
            <summary>
            Version string of the request/response elements ‘EventRTPConferenceStreamChg'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSARICnf">
            <summary>
            Version string of the request/response elements ‘EventSARICnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSecureOMMCertificateServerImportCnf">
            <summary>
            Version string of the request/response elements ‘EventSecureOMMCertificateServerImportCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSecurePROVCertificateServerImportCnf">
            <summary>
            Version string of the request/response elements ‘EventSecurePROVCertificateServerImportCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSecureSIPCertificateCnf">
            <summary>
            Version string of the request/response elements ‘EventSecureSIPCertificateCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSecureSIPCertificateServerImportCnf">
            <summary>
            Version string of the request/response elements ‘EventSecureSIPCertificateServerImportCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSecureSIPCnf">
            <summary>
            Version string of the request/response elements ‘EventSecureSIPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSiteCnf">
            <summary>
            Version string of the request/response elements ‘EventSiteCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSiteSummary">
            <summary>
            Version string of the request/response elements ‘EventSiteSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSNMPCnf">
            <summary>
            Version string of the request/response elements ‘EventSNMPCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSoftwareImageURLCnf">
            <summary>
            Version string of the request/response elements ‘EventSoftwareImageURLCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSpecialBrandingCnf">
            <summary>
            Version string of the request/response elements ‘EventSpecialBrandingCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventStbStateChange">
            <summary>
            Version string of the request/response elements ‘EventStbStateChange'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSuplServCnf">
            <summary>
            Version string of the request/response elements ‘EventSuplServCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSyslogServerCnf">
            <summary>
            Version string of the request/response elements ‘EventSyslogServerCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSystemCredentialsCnf">
            <summary>
            Version string of the request/response elements ‘EventSystemCredentialsCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSystemNameCnf">
            <summary>
            Version string of the request/response elements ‘EventSystemNameCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSystemProvUpdTrigCnf">
            <summary>
            Version string of the request/response elements ‘EventSystemProvUpdTrigCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSysToneSchemeCnf">
            <summary>
            Version string of the request/response elements ‘EventSysToneSchemeCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventSysVoiceboxNumCnf">
            <summary>
            Version string of the request/response elements ‘EventSysVoiceboxNumCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventTimeZoneCnf">
            <summary>
            Version string of the request/response elements ‘EventTimeZoneCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventTimeZoneDetailsCnf">
            <summary>
            Version string of the request/response elements ‘EventTimeZoneDetailsCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventTimeZoneList">
            <summary>
            Version string of the request/response elements ‘EventTimeZoneList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventUsedConfigURL">
            <summary>
            Version string of the request/response elements ‘EventUsedConfigURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventUserDataImport">
            <summary>
            Version string of the request/response elements ‘EventUserDataImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventUserDataServerCnf">
            <summary>
            Version string of the request/response elements ‘EventUserDataServerCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventUserDeviceSyncOMMCnf">
            <summary>
            Version string of the request/response elements ‘EventUserDeviceSyncOMMCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventUserMonitoringCnf">
            <summary>
            Version string of the request/response elements ‘EventUserMonitoringCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventVideoDevCnf">
            <summary>
            Version string of the request/response elements ‘EventVideoDevCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventVideoDevLink">
            <summary>
            Version string of the request/response elements ‘EventVideoDevLink'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventVideoDevSummary">
            <summary>
            Version string of the request/response elements ‘EventVideoDevSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventWLANClient">
            <summary>
            Version string of the request/response elements ‘EventWLANClient'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventWLANProfileCnf">
            <summary>
            Version string of the request/response elements ‘EventWLANProfileCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventWLANRegDomainCnf">
            <summary>
            Version string of the request/response elements ‘EventWLANRegDomainCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.EventXMLApplicationCnf">
            <summary>
            Version string of the request/response elements ‘EventXMLApplicationCnf'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GenerateHealthStateAlarmTriggers">
            <summary>
            Version string of the request/response elements ‘GenerateHealthStateAlarmTriggers'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAccount">
            <summary>
            Version string of the request/response elements ‘GetAccount'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAccountSummary">
            <summary>
            Version string of the request/response elements ‘GetAccountSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetACLEntry">
            <summary>
            Version string of the request/response elements ‘GetACLEntry'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetActivePPDev">
            <summary>
            Version string of the request/response elements ‘GetActivePPDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAdvancedSIP">
            <summary>
            Version string of the request/response elements ‘GetAdvancedSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAlarmTrigger">
            <summary>
            Version string of the request/response elements ‘GetAlarmTrigger'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAlarmTriggerSummary">
            <summary>
            Version string of the request/response elements ‘GetAlarmTriggerSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAutoDBBackup">
            <summary>
            Version string of the request/response elements ‘GetAutoDBBackup'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetAutoDBBackupFileName">
            <summary>
            Version string of the request/response elements ‘GetAutoDBBackupFileName'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBasicSIP">
            <summary>
            Version string of the request/response elements ‘GetBasicSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBackupSIP">
            <summary>
            Version string of the request/response elements ‘GetBackupSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GettBluetoothClientStatistic">
            <summary>
            Version string of the request/response elements ‘GettBluetoothClientStatistic'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBluetoothBeacon">
            <summary>
            Version string of the request/response elements ‘GetBluetoothBeacon'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBluetoothBeaconSummary">
            <summary>
            Version string of the request/response elements ‘GetBluetoothBeaconSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBluetoothGlobalSettings">
            <summary>
            Version string of the request/response elements ‘GetBluetoothGlobalSettings'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetBluetoothSensitivity">
            <summary>
            Version string of the request/response elements ‘GetBluetoothSensitivity'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetConfigURL">
            <summary>
            Version string of the request/response elements ‘GetConfigURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetConferenceRoom">
            <summary>
            Version string of the request/response elements ‘GetConferenceRoom'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetConferenceServerSIP">
            <summary>
            Version string of the request/response elements ‘GetConferenceServerSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetCoreDumpURL">
            <summary>
            Version string of the request/response elements ‘GetCoreDumpURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDbTransferState">
            <summary>
            Version string of the request/response elements ‘GetDbTransferState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTAuthCode">
            <summary>
            Version string of the request/response elements ‘GetDECTAuthCode'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTEncryption">
            <summary>
            Version string of the request/response elements ‘GetDECTEncryption'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTPagingAreaSize">
            <summary>
            Version string of the request/response elements ‘GetDECTPagingAreaSize'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTPowerLimit">
            <summary>
            Version string of the request/response elements ‘GetDECTPowerLimit'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTPpSettings">
            <summary>
            Version string of the request/response elements ‘GetDECTPpSettings'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTRegDomain">
            <summary>
            Version string of the request/response elements ‘GetDECTRegDomain'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDECTSubscriptionMode">
            <summary>
            Version string of the request/response elements ‘GetDECTSubscriptionMode'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDevAutoCreate">
            <summary>
            Version string of the request/response elements ‘GetDevAutoCreate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDigitTreatment">
            <summary>
            Version string of the request/response elements ‘GetDigitTreatment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDigitTreatmentSummary">
            <summary>
            Version string of the request/response elements ‘GetDigitTreatmentSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetDTMF">
            <summary>
            Version string of the request/response elements ‘GetDTMF'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetEULAConfirm">
            <summary>
            Version string of the request/response elements ‘GetEULAConfirm'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetEventLogBuffer">
            <summary>
            Version string of the request/response elements ‘GetEventLogBuffer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetFACList">
            <summary>
            Version string of the request/response elements ‘GetFACList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetFACPrefix">
            <summary>
            Version string of the request/response elements ‘GetFACPrefix'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetFile">
            <summary>
            Version string of the request/response elements ‘GetFile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetFlashMemUsage">
            <summary>
            Version string of the request/response elements ‘GetFlashMemUsage'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetFreeConferenceChannels">
            <summary>
            Version string of the request/response elements ‘GetFreeConferenceChannels'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetG729ChannelsForConference">
            <summary>
            Version string of the request/response elements ‘GetG729ChannelsForConference'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetHealthState">
            <summary>
            Version string of the request/response elements ‘GetHealthState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetIMA">
            <summary>
            Version string of the request/response elements ‘GetIMA'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetIntercomCallHandlingSIP">
            <summary>
            Version string of the request/response elements ‘GetIntercomCallHandlingSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetLastPPDevAction">
            <summary>
            Version string of the request/response elements ‘GetLastPPDevAction'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetLDAP">
            <summary>
            Version string of the request/response elements ‘GetLDAP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetLicense">
            <summary>
            Version string of the request/response elements ‘GetLicense'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetLicenseServerList">
            <summary>
            Version string of the request/response elements ‘GetLicenseServerList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetLicensedCodecLines">
            <summary>
            Version string of the request/response elements ‘GetLicensedCodecLines'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetNetParams">
            <summary>
            Version string of the request/response elements ‘GetNetParams'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetOMMCertificate">
            <summary>
            Version string of the request/response elements ‘GetOMMCertificate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetOMPURL">
            <summary>
            Version string of the request/response elements ‘GetOMPURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetNTPServer">
            <summary>
            Version string of the request/response elements ‘GetNTPServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPARK">
            <summary>
            Version string of the request/response elements ‘GetPARK'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPBXEnrolment">
            <summary>
            Version string of the request/response elements ‘GetPBXEnrolment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPortRangeSIP">
            <summary>
            Version string of the request/response elements ‘GetPortRangeSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPpProfile">
            <summary>
            Version string of the request/response elements ‘GetPpProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPDev">
            <summary>
            Version string of the request/response elements ‘GetPPDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPDevSummary">
            <summary>
            Version string of the request/response elements ‘GetPPDevSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPFirmwareUpdate">
            <summary>
            Version string of the request/response elements ‘GetPPFirmwareUpdate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPFirmwareUpdateOverview">
            <summary>
            Version string of the request/response elements ‘GetPPFirmwareUpdateOverview'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPFirmwareUpdateStatus">
            <summary>
            Version string of the request/response elements ‘GetPPFirmwareUpdateStatus'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPFirmwareURL">
            <summary>
            Version string of the request/response elements ‘GetPPFirmwareURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPLoginVariant">
            <summary>
            Version string of the request/response elements ‘GetPPLoginVariant'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPState">
            <summary>
            Version string of the request/response elements ‘GetPPState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPUser">
            <summary>
            Version string of the request/response elements ‘GetPPUser'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPPUserSummary">
            <summary>
            Version string of the request/response elements ‘GetPPUserSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPreserveUserDeviceRelation">
            <summary>
            Version string of the request/response elements ‘GetPreserveUserDeviceRelation'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetPublicKey">
            <summary>
            Version string of the request/response elements ‘GetPublicKey'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetReadyForConferencing">
            <summary>
            Version string of the request/response elements ‘GetReadyForConferencing'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRegistrationTrafficShaping">
            <summary>
            Version string of the request/response elements ‘GetRegistrationTrafficShaping'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRemoteAccess">
            <summary>
            Version string of the request/response elements ‘GetRemoteAccess'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRemoteSystemDump">
            <summary>
            Version string of the request/response elements ‘GetRemoteSystemDump'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRestrictedSubscriptionDuration">
            <summary>
            Version string of the request/response elements ‘GetRestrictedSubscriptionDuration'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFP">
            <summary>
            Version string of the request/response elements ‘GetRFP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPCapture">
            <summary>
            Version string of the request/response elements ‘GetRFPCapture'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPCaptureList">
            <summary>
            Version string of the request/response elements ‘GetRFPCaptureList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPIpQuality">
            <summary>
            Version string of the request/response elements ‘GetRFPIpQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPM">
            <summary>
            Version string of the request/response elements ‘GetRFPM'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPMediaStreamQuality">
            <summary>
            Version string of the request/response elements ‘GetRFPMediaStreamQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPStatistic">
            <summary>
            Version string of the request/response elements ‘GetRFPStatistic'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPStatisticConfig">
            <summary>
            Version string of the request/response elements ‘GetRFPStatisticConfig'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPSummary">
            <summary>
            Version string of the request/response elements ‘GetRFPSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPSync">
            <summary>
            Version string of the request/response elements ‘GetRFPSync'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRFPSyncQuality">
            <summary>
            Version string of the request/response elements ‘GetRFPSyncQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetRTP">
            <summary>
            Version string of the request/response elements ‘GetRTP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSARI">
            <summary>
            Version string of the request/response elements ‘GetSARI'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSecureSIP">
            <summary>
            Version string of the request/response elements ‘GetSecureSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSecureOMMCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘GetSecureOMMCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSecurePROVCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘GetSecurePROVCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSecureSIPCertificate">
            <summary>
            Version string of the request/response elements ‘GetSecureSIPCertificate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSecureSIPCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘GetSecureSIPCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSite">
            <summary>
            Version string of the request/response elements ‘GetSite'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSiteSummary">
            <summary>
            Version string of the request/response elements ‘GetSiteSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSNMP">
            <summary>
            Version string of the request/response elements ‘GetSNMP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSoftwareImageURL">
            <summary>
            Version string of the request/response elements ‘GetSoftwareImageURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSpecialBranding">
            <summary>
            Version string of the request/response elements ‘GetSpecialBranding'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetStbState">
            <summary>
            Version string of the request/response elements ‘GetStbState'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSuplServ">
            <summary>
            Version string of the request/response elements ‘GetSuplServ'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSyslogServer">
            <summary>
            Version string of the request/response elements ‘GetSyslogServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysStatisticConfig">
            <summary>
            Version string of the request/response elements ‘GetSysStatisticConfig'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysStatisticMinMax">
            <summary>
            Version string of the request/response elements ‘GetSysStatisticMinMax'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysStatisticMinMaxRecord">
            <summary>
            Version string of the request/response elements ‘GetSysStatisticMinMaxRecord'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysStatisticMinMaxSummary">
            <summary>
            Version string of the request/response elements ‘GetSysStatisticMinMaxSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysStatisticOccurrence">
            <summary>
            Version string of the request/response elements ‘GetSysStatisticOccurrence'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSystemCredentials">
            <summary>
            Version string of the request/response elements ‘GetSystemCredentials'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSystemName">
            <summary>
            Version string of the request/response elements ‘GetSystemName'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSystemProvUpdTrig">
            <summary>
            Version string of the request/response elements ‘GetSystemProvUpdTrig'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysToneScheme">
            <summary>
            Version string of the request/response elements ‘GetSysToneScheme'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetSysVoiceboxNum">
            <summary>
            Version string of the request/response elements ‘GetSysVoiceboxNum'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetTimeZone">
            <summary>
            Version string of the request/response elements ‘GetTimeZone'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetTimeZoneDetails">
            <summary>
            Version string of the request/response elements ‘GetTimeZoneDetails'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetTimeZoneList">
            <summary>
            Version string of the request/response elements ‘GetTimeZoneList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetUsedConfigURL">
            <summary>
            Version string of the request/response elements ‘GetUsedConfigURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetUserDataServer">
            <summary>
            Version string of the request/response elements ‘GetUserDataServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetUserDeviceSyncOMM">
            <summary>
            Version string of the request/response elements ‘GetUserDeviceSyncOMM'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetUserMonitoring">
            <summary>
            Version string of the request/response elements ‘GetUserMonitoring'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetVersions">
            <summary>
            Version string of the request/response elements ‘GetVersions'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetVideoDev">
            <summary>
            Version string of the request/response elements ‘GetVideoDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetVideoDevLink">
            <summary>
            Version string of the request/response elements ‘GetVideoDevLink'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetVideoDevSummary">
            <summary>
            Version string of the request/response elements ‘GetVideoDevSummary'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetWLANClients">
            <summary>
            Version string of the request/response elements ‘GetWLANClients'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetWLANProfile">
            <summary>
            Version string of the request/response elements ‘GetWLANProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetWLANRegDomain">
            <summary>
            Version string of the request/response elements ‘GetWLANRegDomain'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetWLANRegDomainList">
            <summary>
            Version string of the request/response elements ‘GetWLANRegDomainList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.GetXMLApplication">
            <summary>
            Version string of the request/response elements ‘GetXMLApplication'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.Limits">
            <summary>
            Version string of the request/response elements ‘Limits'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ManualDBBackup">
            <summary>
            Version string of the request/response elements ‘ManualDBBackup'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ManualDBRestore">
            <summary>
            Version string of the request/response elements ‘ManualDBRestore'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ManualUserDataImport">
            <summary>
            Version string of the request/response elements ‘ManualUserDataImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.Open">
            <summary>
            Version string of the request/response elements ‘Open'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.PARKFromServer">
            <summary>
            Version string of the request/response elements ‘PARKFromServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.Ping">
            <summary>
            Version string of the request/response elements ‘Ping'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.PutFile">
            <summary>
            Version string of the request/response elements ‘PutFile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.RequestPositionInfo">
            <summary>
            Version string of the request/response elements ‘RequestPositionInfo'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ResetRFPMediaStreamQuality">
            <summary>
            Version string of the request/response elements ‘ResetRFPMediaStreamQuality'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ResetRFPStatistic">
            <summary>
            Version string of the request/response elements ‘ResetRFPStatistic'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ResetSysStatistic">
            <summary>
            Version string of the request/response elements ‘ResetSysStatistic'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.ResetTimeZoneDetails">
            <summary>
            Version string of the request/response elements ‘ResetTimeZoneDetails'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SendMessage">
            <summary>
            Version string of the request/response elements ‘SendMessage'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetAccount">
            <summary>
            Version string of the request/response elements ‘SetAccount'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetACLEntry">
            <summary>
            Version string of the request/response elements ‘SetACLEntry'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetAdvancedSIP">
            <summary>
            Version string of the request/response elements ‘SetAdvancedSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetAlarmTrigger">
            <summary>
            Version string of the request/response elements ‘SetAlarmTrigger'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetAutoDBBackup">
            <summary>
            Version string of the request/response elements ‘SetAutoDBBackup'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetBasicSIP">
            <summary>
            Version string of the request/response elements ‘SetBasicSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetBackupSIP">
            <summary>
            Version string of the request/response elements ‘SetBackupSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetBluetoothBeacon">
            <summary>
            Version string of the request/response elements ‘SetBluetoothBeacon'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetBluetoothGlobalSettings">
            <summary>
            Version string of the request/response elements ‘SetBluetoothGlobalSettings'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetBluetoothSensitivity">
            <summary>
            Version string of the request/response elements ‘SetBluetoothSensitivity'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetConferenceRoom">
            <summary>
            Version string of the request/response elements ‘SetConferenceRoom'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetConferenceServerSIP">
            <summary>
            Version string of the request/response elements ‘SetConferenceServerSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetConfigURL">
            <summary>
            Version string of the request/response elements ‘SetConfigURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetCoreDumpURL">
            <summary>
            Version string of the request/response elements ‘SetCoreDumpURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTAuthCode">
            <summary>
            Version string of the request/response elements ‘SetDECTAuthCode'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTEncryption">
            <summary>
            Version string of the request/response elements ‘SetDECTEncryption'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTPagingAreaSize">
            <summary>
            Version string of the request/response elements ‘SetDECTPagingAreaSize'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTPowerLimit">
            <summary>
            Version string of the request/response elements ‘SetDECTPowerLimit'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTPpSettings">
            <summary>
            Version string of the request/response elements ‘SetDECTPpSettings'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTRegDomain">
            <summary>
            Version string of the request/response elements ‘SetDECTRegDomain'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDECTSubscriptionMode">
            <summary>
            Version string of the request/response elements ‘SetDECTSubscriptionMode'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDevAutoCreate">
            <summary>
            Version string of the request/response elements ‘SetDevAutoCreate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDigitTreatment">
            <summary>
            Version string of the request/response elements ‘SetDigitTreatment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetDTMF">
            <summary>
            Version string of the request/response elements ‘SetDTMF'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetEULAConfirm">
            <summary>
            Version string of the request/response elements ‘SetEULAConfirm'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetFAC">
            <summary>
            Version string of the request/response elements ‘SetFAC'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetFACList">
            <summary>
            Version string of the request/response elements ‘SetFACList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetFACPrefix">
            <summary>
            Version string of the request/response elements ‘SetFACPrefix'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetIMA">
            <summary>
            Version string of the request/response elements ‘SetIMA'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetIntercomCallHandlingSIP">
            <summary>
            Version string of the request/response elements ‘SetIntercomCallHandlingSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetLDAP">
            <summary>
            Version string of the request/response elements ‘SetLDAP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetLicenseServerList">
            <summary>
            Version string of the request/response elements ‘SetLicenseServerList'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetNetParams">
            <summary>
            Version string of the request/response elements ‘SetNetParams'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetOMMCertificate">
            <summary>
            Version string of the request/response elements ‘SetOMMCertificate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetOMPURL">
            <summary>
            Version string of the request/response elements ‘SetOMPURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetNTPServer">
            <summary>
            Version string of the request/response elements ‘SetNTPServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPARK">
            <summary>
            Version string of the request/response elements ‘SetPARK'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPBXEnrolment">
            <summary>
            Version string of the request/response elements ‘SetPBXEnrolment'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPortRangeSIP">
            <summary>
            Version string of the request/response elements ‘SetPortRangeSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPpProfile">
            <summary>
            Version string of the request/response elements ‘SetPpProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPDev">
            <summary>
            Version string of the request/response elements ‘SetPPDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPFirmwareUpdate">
            <summary>
            Version string of the request/response elements ‘SetPPFirmwareUpdate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPFirmwareURL">
            <summary>
            Version string of the request/response elements ‘SetPPFirmwareURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPLoginVariant">
            <summary>
            Version string of the request/response elements ‘SetPPLoginVariant'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPUser">
            <summary>
            Version string of the request/response elements ‘SetPPUser'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPUserDevRelation">
            <summary>
            Version string of the request/response elements ‘SetPPUserDevRelation'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPPUserTracking">
            <summary>
            Version string of the request/response elements ‘SetPPUserTracking'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetPreserveUserDeviceRelation">
            <summary>
            Version string of the request/response elements ‘SetPreserveUserDeviceRelation'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRegistrationTrafficShaping">
            <summary>
            Version string of the request/response elements ‘SetRegistrationTrafficShaping'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRemoteAccess">
            <summary>
            Version string of the request/response elements ‘SetRemoteAccess'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRemoteSystemDump">
            <summary>
            Version string of the request/response elements ‘SetRemoteSystemDump'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRestrictedSubscriptionDuration">
            <summary>
            Version string of the request/response elements ‘SetRestrictedSubscriptionDuration'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRFP">
            <summary>
            Version string of the request/response elements ‘SetRFP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRFPCapture">
            <summary>
            Version string of the request/response elements ‘SetRFPCapture'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRFPM">
            <summary>
            Version string of the request/response elements ‘SetRFPM'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRTP">
            <summary>
            Version string of the request/response elements ‘SetRTP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetRTPConferenceStreamChg">
            <summary>
            Version string of the request/response elements ‘SetRTPConferenceStreamChg'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSARI">
            <summary>
            Version string of the request/response elements ‘SetSARI'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSecureSIP">
            <summary>
            Version string of the request/response elements ‘SetSecureSIP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSecureOMMCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘SetSecureOMMCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSecurePROVCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘SetSecurePROVCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSecureSIPCertificate">
            <summary>
            Version string of the request/response elements ‘SetSecureSIPCertificate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSecureSIPCertificateServerImport">
            <summary>
            Version string of the request/response elements ‘SetSecureSIPCertificateServerImport'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSite">
            <summary>
            Version string of the request/response elements ‘SetSite'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSNMP">
            <summary>
            Version string of the request/response elements ‘SetSNMP'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSoftwareImageURL">
            <summary>
            Version string of the request/response elements ‘SetSoftwareImageURL'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSpecialBranding">
            <summary>
            Version string of the request/response elements ‘SetSpecialBranding'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSuplServ">
            <summary>
            Version string of the request/response elements ‘SetSuplServ'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSyslogServer">
            <summary>
            Version string of the request/response elements ‘SetSyslogServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSystemCredentials">
            <summary>
            Version string of the request/response elements ‘SetSystemCredentials'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSystemName">
            <summary>
            Version string of the request/response elements ‘SetSystemName'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSystemProvUpdTrig">
            <summary>
            Version string of the request/response elements ‘SetSystemProvUpdTrig'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSysToneScheme">
            <summary>
            Version string of the request/response elements ‘SetSysToneScheme'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetSysVoiceboxNum">
            <summary>
            Version string of the request/response elements ‘SetSysVoiceboxNum'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetTimeZone">
            <summary>
            Version string of the request/response elements ‘SetTimeZone'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetTimeZoneDetails">
            <summary>
            Version string of the request/response elements ‘SetTimeZoneDetails'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetUserDataServer">
            <summary>
            Version string of the request/response elements ‘SetUserDataServer'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetUserDeviceSyncOMM">
            <summary>
            Version string of the request/response elements ‘SetUserDeviceSyncOMM'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetUserMonitoring">
            <summary>
            Version string of the request/response elements ‘SetUserMonitoring'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetVideoDev">
            <summary>
            Version string of the request/response elements ‘SetVideoDev'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetWLANProfile">
            <summary>
            Version string of the request/response elements ‘SetWLANProfile'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetWLANRegDomain">
            <summary>
            Version string of the request/response elements ‘SetWLANRegDomain'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SetXMLApplication">
            <summary>
            Version string of the request/response elements ‘SetXMLApplication'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SoftwareUpate">
            <summary>
            Version string of the request/response elements ‘SoftwareUpate'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.Subscribe">
            <summary>
            Version string of the request/response elements ‘Subscribe'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.GetVersionsResp.SystemRestart">
            <summary>
            Version string of the request/response elements ‘SystemRestart'.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxAxiClients">
            <summary>
            Maximal number of supported AXI clients.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxCodecs">
            <summary>
            Maximal number of supported codecs.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxLdapServer">
            <summary>
            Maximal number of supported LDAP servers.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.LicenseGracePeriod">
            <summary>
            Grace period timeout in seconds.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxPP">
            <summary>
            Maximal number of supported DECT phones.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxXmlRecords">
            <summary>
            Maximal number of records supported in one XML element.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxRFP">
            <summary>
            Maximal number of supported RFPs.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxSites">
            <summary>
            Maximal number of supported sites.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxSSID">
            <summary>
            Maximal number of supported WLAN SSIDs.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxWlanKeys">
            <summary>
            Maximal number of supported WLAN keys of an SSID.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxProfiles">
            <summary>
            Maximal number of supported DECT phone profiles.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxCertificates">
            <summary>
            Maximal number of supported SIP (trusted or local) certificates.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxPPVideoDev">
            <summary>
            Maximal number of supported video devices for a DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxAlarmTrigger">
            <summary>
            Maximal number of supported alarm triggers.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxUrlLength">
            <summary>
            Maximal supported length of an URL.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxUserAccounts">
            <summary>
            Maximal number of user account Ids.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxDNSServer">
            <summary>
            Maximal number of supported RFPM DNS servers.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxNTPServer">
            <summary>
            Maximal number of supported RFPM NTP servers.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxWLANProfiles">
            <summary>
            Maximal number of supported WLAN profiles.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxWLANClients">
            <summary>
            Maximal number of supported WLAN clients.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxWLANMacFilter">
            <summary>
            Maximal number of supported WLAN MAC filters entries.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxBuildInXmlApps">
            <summary>
            Maximal number of supported built-in XML applications.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxBluetoothBeacons">
            <summary>
            Maximal number of supported Bluetooth beacons.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxBluetoothNeighbours">
            <summary>
            Maximal number of supported Bluetooth beacon neighbors.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxBluetoothRssiValues">
            <summary>
            Maximal number of supported Bluetooth RSSI values for a Bluetooth client.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxConferenceRooms">
            <summary>
            Maximal number of supported conference rooms.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxDynamicXmlApps">
            <summary>
            Maximal number of supported dynamic/configurable XML applications.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.MaxCorporateDirectoryInXmlApps">
            <summary>
            Maximal number of supported corporate directory XML applications contained in dynamic/configurable XML application entries.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.RTTLimit1">
            <summary>
            IP quality limit 1 for round trip time (rtt) in ms. Interval 1: 0 ms &lt; limitRTT1 ms
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.RTTLimit2">
            <summary>
            IP quality limit 2 for round trip time (rtt) in ms. Interval 2: limitRTT1 ms &lt; limitRTT2 ms
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.RTTLimit3">
            <summary>
            IP quality limit 3 for round trip time (rtt) in ms. Interval 3: limitRTT2 ms &lt; limitRTT3 ms
            </summary>
        </member>
        <member name="P:mitelapi.Messages.LimitsResp.RTTLimit4">
            <summary>
            IP quality limit 4 for round trip time (rtt) in ms. Interval 4: limitRTT3 ms &lt; limitRTT4 ms Interval 5: &gt;= limitRTT4 ms
            </summary>
        </member>
        <member name="P:mitelapi.Messages.Open.Username">
            <summary>
            User name for authentication
            </summary>
        </member>
        <member name="P:mitelapi.Messages.Open.Password">
            <summary>
            Password for authentication
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.OmmVersion">
            <summary>
            Full version string of the OMM:
            &lt;majorRelease&gt;.&lt;minorRelease&gt;.{RC x | SP y | &lt;bugfixVersion&gt;} [ Build z] [version description],
            e. g. „2.1 RC4”, „2.1 SP1”, „2.1.5”, „2.1SP1 Build 2”,r „3.0 RC1 Build 1 - OpenMobility SIP 3.0RC1-Internal”.
            RCx: Release candidate number x
            SPy: Release service pack number y
            bugfixVersion: Old bugfix release version number
            Build z: Build release number z for internal use
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.OmmAxiSpecVersion">
            <summary>
            Version string of the used OM AXI spezification (e. g. “6.1”).
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.ProtocolVersion">
            <summary>
            This is the OM AXI protocol version.
            The protocolVersion changes when at least one minor or major version number changes.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.AxiClients">
            <summary>
            Number of currently connected AXI clients
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.PublicKey">
            <summary>
            Public key
            </summary>
        </member>
        <member name="P:mitelapi.Messages.OpenResp.StandbyState">
            <summary>
            State of the OMM standby feature.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.Ping.Timestamp">
            <summary>
            The client requests with the time stamp (in seconds since 1970/1/1) the current time stamp from the AXI server (OMM).
            </summary>
        </member>
        <member name="P:mitelapi.Messages.PingResp.TimeStamp">
            <summary>
            Current time stamp (in seconds since 1970/1/1) response by the AXI server (OMM) when the client requires the time stamp to verify whether the current time is correctly used.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.PutFile">
            <summary>
            With this request a client can upload a file to the OMM.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.PutFile.Name">
            <summary>
            File name
            </summary>
        </member>
        <member name="P:mitelapi.Messages.PutFile.Offset">
            <summary>
            File offset, for reference reasons
            </summary>
        </member>
        <member name="P:mitelapi.Messages.PutFile.Data">
            <summary>
            Base64 encoded file data block
            <remarks>
            In some cases data might be empty (e. g. for :ima), then the file will be deleted. 
            </remarks> 
            </summary>
        </member>
        <member name="T:mitelapi.Messages.RequestPositionInfo">
            <summary>
            With this request a client can locate a DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.RequestPositionInfo.Ppn">
            <summary>
            PPN of DECT phone to be found
            </summary>
        </member>
        <member name="F:mitelapi.Messages.RequestRFPEnrollment.RfpId">
            <summary>
            id of the RFP that needs to be enrolled again
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetDECTSubscriptionMode">
            <summary>
            A client can send this request to the OMM to enable or disable DECT subscription modes. Once started, the
            subscription modes will be stopped by timers in the OMM.Additionally, they can be stopped explicitly with
            another SetDECTSubscriptionMode request.
            Use the mode Wildcard to enable wildcard subscriptions, i.e.subscriptions of DECT phones which’s IPEIs are not
            configured in the OMM yet.Use Configured to enable subscription of configured IPEIs only.Disable any
            subscription by using mode Off.
            Enabling Wildcard will also implicitly allow the Configured mode.
            The Configured mode does always have a timeout of 24 hours, no matter if it was started explicitly or implicitly
            with Wildcard.These 24 hours will not be extended automatically.
            The Wildcard mode can be started with a timeout between 1 minute and 60 minutes.Each time a wildcard
            subscription actually took place, the timeout will be extended by the time interval once given in the request.
            Activating one of these Subscription modes while there still a subscription mode enabled will have the same
            result as stopping the old mode before starting the new mode.
            To keep track of the states of subscription modes, there is a notification event defined, refer to chapter 4.30.3.
            Following fields are defined for the request SetDECTSubscriptionMode in addition to the common attributes:
            </summary>
        </member>
        <member name="F:mitelapi.Messages.SetDECTSubscriptionMode.Mode">
            <summary>
            Mode to be set.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetDECTSubscriptionMode.Timeout">
            <summary>
            Timeout for Wildcard mode. Default 3 minutes. Ignored
            in other modes.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetDECTSubscriptionModeResp">
            <summary>
            The reply to this request is called SetDECTSubscriptionModeResp. It contains all actual set attributes, all
            attributes are optional.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetDevAutoCreate">
            <summary>
            With this request the client can enable or disable auto-create on subscription
            Following fields are defined for this request in addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetDevAutoCreate.Enable">
            <summary>
            „1” or “true”, if auto-create is enabled
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetDevAutoCreateResp">
            <summary>
            Following fields are defined for this request in addition to the common attributes:
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetPPUserDevRelation">
            <summary>
            SetPPUserDevRelation The client can send this request to OM AXI to change the relation between a  
            DECT phone user and a DECT phone device data set.
            The User ID (uid) has to be filled in by the client to identify the  DECT phone user data set to be changed.
            Additionally the relation attribute must be filled in by the client. 
            </summary>
            <remarks>It is only possible to change a relationship between a user and a 
            DECT phone device from Fixed to Dynamic and from Dynamic to Fixed. 
            The client needs one of these permissions to use this request: AllCnfWrite
            </remarks>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserDevRelation.Uid">
            <summary>
            User ID, of the user data set
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserDevRelation.RelType">
            <summary>
            Type or state of a relationship to the  DECT phone device to be set.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetPPUserDevRelationResp">
            <summary>
            The reply to a <see cref="T:mitelapi.Messages.SetPPUserDevRelation"/> request. 
            It contains all actual set attributes, all attributes are optional.
            </summary>
            <remarks>
            The Event notification for this change is done by <see cref="!:EventPPDevCnf"/> and <see cref="!:EventPPUserCnf"/>.
            </remarks>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserDevRelationResp.Uid">
            <summary>
            User ID, of the user data set
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserDevRelationResp.RelType">
            <summary>
            Type or state of a relationship to the DECT phone device that has been set.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetPPUserTracking">
            <summary>
            The client can send this request to OM AXI to change the attribute trackingActive of a DECT phone user data set.
            The User ID (uid) has to be filled in by the client to identify the record to be changed.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserTracking.Uid">
            <summary>
            User ID, numbering starts at 1, 0 is invalid
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserTracking.TrackingActive">
            <summary>
            „1” or “true”, if the location of this user has to be tracked
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserTrackingResp.Uid">
            <summary>
            User ID, numbering starts at 1, 0 is invalid
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetPPUserTrackingResp.TrackingActive">
            <summary>
            „1” or “true”, if the location of this user has to be tracked
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetRFP">
            <summary>
            The client can send this request to OM AXI to change an RFP data set. The id has to be filled in by the client to
            identify the record to be changed.Additionally the attributes of the RFP which have to be changed must be filled
            in by the client.
            Note that attributes describing transient properties are ignored
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetRFP.Rfp">
            <summary>
            Data of RFP to chang
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetRFPResp">
            <summary>
            If the RFP change was successful, the reply contains all RFP attributes which GetRFP would return, but no state
            information.Some data fields may be changed or set by the OMM.If the creation fails, the OM AXI returns an
            error code.If applicable, the attributes will contain the data fields which lead to the error (which was wrong,
            missing etc.).
            The reply to this request is called SetRFPResp. It contains all actual set attributes, all attributes are optional.
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetRFPCapture">
            <summary>
            With this request the client can set the RFP capturing. After setting the OMM automatically captures all not
            configured RFPs connecting the OMM.The client can use these RFPs for an easier configuration.
            Following fields are defined for the request SetRFPCapture in addition to the common attributes
            </summary>
        </member>
        <member name="T:mitelapi.Messages.SetRFPCaptureResp">
            <summary>
            A client can get a list with all captured but not configured RFPs.
            Following fields are defined for this request in addition to the common attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SetRFPCaptureResp.Enable">
            <summary>
            „1” or “true”, when RFP capturing is enabled.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.Subscribe.Commands">
            <summary>
            Up to 20 event commands to be executed at once atomically.
            </summary>
        </member>
        <member name="P:mitelapi.Messages.SubscribeResp.Event">
            <summary>
            The first event type which caused EInval or EPerm
            </summary>
        </member>
        <member name="M:mitelapi.OmmClient.LoginAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            This is the only request the OMM accepts on a freshly set up TCP link, which has the state new.
            If Open fails, the client may send additional Open messages with different ingredients
            (e. g. a different OM AXI protocol version or password) to try to set up a session.
            The link remains in the state new as long as Open was not successful.<para/>
            Open is not accepted by the OMM on an already opened session.
            </summary>
            <param name="username">User name for authentication</param>
            <param name="password">Password for authentication</param>
            <param name="userDeviceSync"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.GetVersionsAsync(System.Threading.CancellationToken)">
            <summary>
            This request is sent from the client to the OMM to request the versions of requests/responses or events.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.LimitsAsync(System.Threading.CancellationToken)">
            <summary>
            This request is sent from the client to the OMM to request the limits of the OMM.
            </summary>
            <param name="cancellation"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.SubscribeAsync(mitelapi.Types.EventType,System.Threading.CancellationToken)">
            <summary>
            This request can be sent to OM AXI to change events the client wants to be notified of.
            If the underlying TCP link gets closed by whatever reason, all notification subscriptions end automatically.
            The subscription mechanism remembers a flag for each possible event and for each possible element (e. g. DECT phone).
            The command “on” sets the corresponding flag in the OM AXI implementation for the given events. It can be reset by using “off”.
            </summary>
        </member>
        <member name="M:mitelapi.OmmClient.SubscribeAsync(mitelapi.Types.SubscribeCmdType,System.Threading.CancellationToken)">
            <summary>
            This request can be sent to OM AXI to change events the client wants to be notified of.
            If the underlying TCP link gets closed by whatever reason, all notification subscriptions end automatically.
            The subscription mechanism remembers a flag for each possible event and for each possible element (e. g. DECT phone).
            The command “on” sets the corresponding flag in the OM AXI implementation for the given events. It can be reset by using “off”.
            </summary>
        </member>
        <member name="M:mitelapi.OmmClient.SubscribeAsync(mitelapi.Types.SubscribeCmdType[],System.Threading.CancellationToken)">
            <summary>
            This request can be sent to OM AXI to change events the client wants to be notified of.
            If the underlying TCP link gets closed by whatever reason, all notification subscriptions end automatically.
            The subscription mechanism remembers a flag for each possible event and for each possible element (e. g. DECT phone).
            The command “on” sets the corresponding flag in the OM AXI implementation for the given events. It can be reset by using “off”.
            </summary>
            <param name="commands">Up to 20 event commands to be executed at once atomically.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.PingAsync(System.Threading.CancellationToken)">
            <summary>
            With this request a client can keep the TCP link alive.
            If the request is sent before the 5 minutes timeout expires, the link is kept open.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.GetStbStateAsync(System.Threading.CancellationToken)">
            <summary>
            With this requests the client can ask for information about the current OMM standby state.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.GetPublicKeyAsync(System.Threading.CancellationToken)">
            <summary>
            With this request the client can obtain the public RSA key to be used to encrypt certain attributes.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.RequestPositionInfoAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            With this request a client can locate a DECT phone.
            </summary>
            <param name="ppn">PPN of DECT phone to be found</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.SetPPUserTrackingAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The client can send this request to OM AXI to change the attribute trackingActive of a DECT phone user data set.
            </summary>
            <param name="uid">The User ID (uid) has to be filled in by the client to identify the record to be changed.</param>
            <param name="active">„1” or “true”, if the location of this user has to be tracked</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.SendMessageAsync(mitelapi.Types.MessageType,System.Threading.CancellationToken)">
            <summary>
            A client can send this request to send a message to a DECT phone.
            If the message is accepted by the OMM, it is put into a send queue.
            The response to this request is always sent immediately, but it will take a while until the message can be forwarded to a DECT phone.
            For that reason the progress of sending the message is reported using Events.
            </summary>
            <param name="message">Message to be sent.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.DeleteMessageAsync(System.UInt32,System.UInt32,System.String,System.Threading.CancellationToken)">
            <summary>
            A client can send this request to delete a message from a DECT phone.
            If the message which has to be deleted is still buffered in the OMM, it is removed from the queue, in this case this request has the same semantic as <see cref="M:mitelapi.OmmClient.CancelMessageAsync(System.UInt32,System.UInt32,System.String,System.Threading.CancellationToken)"/>.
            If the request is accepted by the OMM, it is put into the same queue as a message which had to be sent would have been put.
            The response to this request is always sent immediately, but it will take a while until the delete request can be actually forwarded to a DECT phone.
            For that reason the progress of deleting a message is reported using Events
            </summary>
            <param name="id">Message ID.</param>
            <param name="sendTime">Original send time of the message to be deleted.</param>
            <param name="toAddr">Recipient address of the message to be deleted. Must have the same scheme as the original message (e.g. "tel:" or "ppn:").</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.CancelMessageAsync(System.UInt32,System.UInt32,System.String,System.Threading.CancellationToken)">
            <summary>
            A client can send this request to remove a message from the send queue.
            If the message which has to be cancelled is still buffered in the OMM, it is removed from the queue.
            If it has been delivered already, this request has no effect.
            </summary>
            <param name="id">Message ID.</param>
            <param name="sendTime">Original send time of the message to be cancelled.</param>
            <param name="toAddr">Recipient address of the message to be cancelled. Must have the same scheme as the original message ( e. g. "tel:" or "ppn:").</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:mitelapi.OmmClient.GetRFPStatisticAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            With this request the client can query the statistic counter of an RFP.
            </summary>
            <param name="id">Unique RFP identifier. The numbering starts at 0</param>
            <param name="maxRecord">Maximal number of records to return. Not more than 20 allowed.
            If maxRecord is equal 0, only the record of the RFP addressed by id should be fetched</param>
            <param name="recordSet">Record set to read
            Record 0 identifies the overall counter, 1 the current week, 2 the week before the current week and so on.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="F:mitelapi.Types.CallForwardStateType.Off">
            <summary>
            No call forward 
            </summary>
        </member>
        <member name="F:mitelapi.Types.CallForwardStateType.Busy">
            <summary>
            Call forward on busy
            </summary>
        </member>
        <member name="F:mitelapi.Types.CallForwardStateType.NoAnswer">
            <summary>
            Call forward on no answer
            </summary>
        </member>
        <member name="F:mitelapi.Types.CallForwardStateType.BusyNoAnswer">
            <summary>
            Call forward on busy and no answer
            </summary>
        </member>
        <member name="F:mitelapi.Types.CallForwardStateType.All">
            <summary>
            Forward immediately
            </summary>
        </member>
        <member name="T:mitelapi.Types.DECTSubscriptionStateType">
            Describes available subscription states
        </member>
        <member name="F:mitelapi.Types.DECTSubscriptionStateType.No">
            <summary>
            Not subscribed 
            </summary>
        </member>
        <member name="F:mitelapi.Types.DECTSubscriptionStateType.Unconfirmed">
            <summary>
            The subscription was made but not confirmed by the DECT phone 
            </summary>
        </member>
        <member name="F:mitelapi.Types.DECTSubscriptionStateType.Yes">
            <summary>
            The subscription was confirmed 
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.None">
            <summary>
            Do not store the message, must be combined with popUp=�1�
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.Idle">
            <summary>
            Show the message in Idle display only
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.Inbox">
            <summary>
            Inbox
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.AddToInbox">
            <summary>
            Add to inbox silently
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.AddToPreDefined">
            <summary>
            Add this message to the pool of pre-defined messages
            </summary>
        </member>
        <member name="F:mitelapi.Types.FolderType.AddToOutbox">
            <summary>
            Add this message to the Outbox
            </summary>
        </member>
        <member name="T:mitelapi.Types.LicenseRFPType">
            <summary>
            This type contains all license RFP data fields. It is used in license the event and license responses.
            </summary>
        </member>
        <member name="P:mitelapi.Types.LicenseRFPType.Id">
            <summary>
            Unique RFP identifier of the license RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.LicenseRFPType.EthAddr">
            <summary>
            Ethernet address of the license RFP, format "00:11:22:aa:bb:cc"
            </summary>
        </member>
        <member name="P:mitelapi.Types.LicenseRFPType.Connected">
            <summary>
            "1" or "true", if the license RFP is connected
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseSize.Small">
            <summary>
            own PARK, no activation for maximal 5 RFPs
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseSize.Standard">
            <summary>
            own PARK and license for all RFPs
            </summary>
        </member>
        <member name="T:mitelapi.Types.LicenseType">
            <summary>
            This type contains all license RFP data fields. It is used in license the event and license responses defined in this chapter.
            </summary>
        </member>
        <member name="P:mitelapi.Types.LicenseType.Key">
            <summary>
            License key string
            </summary>
        </member>
        <member name="P:mitelapi.Types.LicenseType.Number">
             <summary>
            Up to this number the license is valid depending on the license type.
             <remarks>
             <para>OMM system license:
             Number of RFPs to be used</para>
             <para>OMM locating license:
             Number of DECT phones allowed users to locate other users</para> 
             </remarks>
             </summary>
        </member>
        <member name="T:mitelapi.Types.SysLicenseType">
            <inheritdoc/>
        </member>
        <member name="P:mitelapi.Types.SysLicenseType.SystemLicenseVersion">
            <summary>
            OMM system license
            <remarks>
            <para>
            �x.y�, specifies the major release number �x� and the minor release number �y� of the OMM release the license is valid for.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="T:mitelapi.Types.MsgLicenseType">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Types.MsgLicenseType.MessagingLicenseRcvMsgs">
            <summary>
            "1" or "true", if the license is valid to receive messages at the DECT phones.
            </summary>
        </member>
        <member name="T:mitelapi.Types.LocLicenseType">
            <inheritdoc />
        </member>
        <member name="P:mitelapi.Types.LocLicenseType.LocatingLicense">
            <summary>
            "1" or "true", if the license is valid to run the licensed external location application.
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.NoLicense">
            <summary>
            no valid OMM system license set
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.InactiveLicense">
            <summary>
            less than 2 license RFPs connected
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.InactiveLicenseBlocked">
            <summary>
            configuration exceeds license limitation, e. g. too many RFPs configured
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.NoRedundancyLicense">
            <summary>
            only 2 license RFPs are connected
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.NoRedundancyLicenseBlocked">
            <summary>
            configuration exceeds license limitation
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.ActiveLicense">
            <summary>
            all is fine
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolation.ActiveLicenseBlocked">
            <summary>
            configuration exceeds license limitation
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolationReason.NoViolation">
            <summary>
            no license violation
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolationReason.NoLicense">
            <summary>
            no OMM system license configured
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolationReason.NumRFPs">
            <summary>
            too many RFPs configured
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolationReason.SwRelease">
            <summary>
            license not valid for this software release
            </summary>
        </member>
        <member name="F:mitelapi.Types.LicenseViolationReason.NumLocatables">
            <summary>
            too many users configured to locate
            </summary>
        </member>
        <member name="T:mitelapi.Types.LocationType">
            <summary>
            This type contains all data fields which describe the location of a DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Types.LocationType.Id">
            <summary>
            ID of RFP the DECT phone has been located at
            </summary>
        </member>
        <member name="P:mitelapi.Types.LocationType.RssiNew">
            <summary>
            RSSI of the new RFP at the time of the handover in call state or for the next call setup in negative form, e.g. "-75" for �75 dBm
            </summary>
        </member>
        <member name="P:mitelapi.Types.LocationType.RssiOld">
            <summary>
            RSSI of the old RFP at the time of the handover in call state or for the next call setup in negative form, e. g. "-75" for �75 dBm
            </summary>
        </member>
        <member name="P:mitelapi.Types.LocationType.MultiFrame">
            <summary>
            Multiframe number the location has been recorded at, (1 increment per 160 ms)
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.None">
            <summary>
            No melody (default)
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody1">
            <summary>
            Message melody 1 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody2">
            <summary>
            Message melody 2 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody3">
            <summary>
            Message melody 3 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody4">
            <summary>
            Message melody 4 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody5">
            <summary>
            Message melody 5 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody6">
            <summary>
            Message melody 6 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody7">
            <summary>
            Message melody 7 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody8">
            <summary>
            Message melody 8 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody9">
            <summary>
            Message melody 9 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MelodyType.MsgMelody10">
            <summary>
            Message melody 10 for internal DECT phone melody
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.ReadYes">
            <summary>
            Message was opened for reading
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.ReadNo">
            <summary>
            Message was deleted without reading it.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.OrderOk">
            <summary>
            Order accepted
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.OrderNok">
            <summary>
            Order not accepted
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.OrderDontKnow">
            <summary>
            Not sure whether the order could be accomplished
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.CompleteDone">
            <summary>
            Accomplished
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.CompleteNotDone">
            <summary>
            Not accomplished
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageConfirmType.CompleteFailed">
            <summary>
            Failed to accomplish order
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.Overridden">
            <summary>
            The message to be send has been removed from the queue by a higher prioritized message.
            If the client is still interested in sending this message, it should try again after getting an EventQueueEmpty.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.DeleteOverridden">
            <summary>
            The message deletion commands have been removed from the queue by a higher prioritized message.
            If the client is still interested in deleting this message, it should try again after getting an EventQueueEmpty.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.Delivered">
            <summary>
            The message has been delivered to the DECT phone.
            This does not mean that the user actually did open, read nor understand this message.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.DeleteDelivered">
            <summary>
            This event is sent in one of these two cases:
            - The message deletion command has been delivered to the DECT phone
            - The message which should be deleted has been removed from the queue in case it has not been send to the DECT phone yet.
            In both cases the deletion can be seen as completed.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.PagingTimeout">
            <summary>
            The DECT phone was not been found yet.
            However, the OMM will continue to search for this DECT phone.
            This is for informational purposes only.
            When PagingTimeout is received during the client is waiting for a DeleteDelivered the client must know, that the DeleteMessage is trashed.
            The DeleteMessage has to be sent again by the client after timeout.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.Rejected">
            <summary>
            The message has not been accepted by the DECT phone. It should not be resent.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.Busy">
            <summary>
            The message has not been accepted by the DECT phone.
            The DECT phone is temporarily busy and the message can be resent after a timeout.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.WrongCharacterSet">
            <summary>
            The message has not been accepted by the DECT phone, because of a wrong character set.
            This must be the Latin1 character set.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.WrongUri">
            <summary>
            The message has not been accepted by the DECT phone, because of an unknown URI format.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.TemporaryUnavailable">
            <summary>
            The message has not been accepted by the DECT phone, because the DECT phone is switched off.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MessageProgressType.Unknown">
            <summary>
            The message has not been accepted by the DECT phone.
            The reason is unknown.
            </summary>
        </member>
        <member name="T:mitelapi.Types.MessageType">
            <summary>
            This type contains all fields of a message.
            It is used in different requests and notifications.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.SendTime">
            <summary>
            Original send time in seconds since 01.01.1970 00:00 as it shall be used to display the send time at the DECT phone
            (note that the DECT phone and the AXI client might be in different time zones � this will not be adjusted for the DECT phone).
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Id">
            <summary>
            Message ID. sendTime and id together should be chosen to be unique.
            This may be left out if the message does not need to be identified later.
            The default setting is 0.
            Since SIP-DECT 7.0 the value has to less than 1048576.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Ppn">
            <summary>
            If sent from a DECT phone: PPN
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.FromAddr">
            <summary>
            Sender address.
            In URI format, e. g. �mailto:foo@bar.org�, �tel:4711�.
            The maximal length is 64 bytes/characters(UTF-8 characters might be more than 1 byte).
            The client can feel free to use this address.
            An address like �alarmserver:alarmtype� would be correct.
            It is up to the client use this address on how messages handled internally.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.FromName">
            <summary>
            Human readable name of the sender, if available.
            The maximal length is 64 bytes/characters(UTF-8 characters might be more than 1 byte).
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.ToAddr">
            <summary>
            Recipient address in URI format.
            This may also be an explicit PPN, e. g. "ppn:23" to address a physical DECT phone.
            The maximal length is 128 bytes/characters(UTF-8 characters might be more than 1 byte).
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.ToName">
            <summary>
            Human readable name of the recipient, if available.
            The maximal length is 64 bytes/characters(UTF-8 characters might be more than 1 byte).
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:mitelapi.Types.MessageType.CallbackAddr" -->
        <member name="P:mitelapi.Types.MessageType.CallbackName">
            <summary>
            Human readable callback name of the callback receiver, if available.
            The maximal length is 64 bytes/characters(UTF-8 characters might be more than 1 byte).
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.AutoCallback">
            <summary>
            Automatic call establishment from the recipient DECT phone of the message to the callback address party.
            Default=False
            Note: autoCallback is not supported to a video device.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Priority">
            <summary>
            One of �Info�, �Low�, �Normal�, �High�, �Emergency�, �LocatingAlert�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Folder">
            <summary>
            Where to store the message.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.NoReply">
            <summary>
            �1� or �true�, if the receiver must not reply to this message
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.AutoDelete">
            <summary>
            �1� or �true�, if the message has to be deleted after it reached its final state (i.e. all required confirmations sent)
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.PopUp">
            <summary>
            �1� or �true�, for additional pop-up window
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Encoding">
            <summary>
            One of �UTF-8�
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.ContentType">
            <summary>
            One of �text/plain�, �text/x-vcard�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Confirm">
            <summary>
            Confirmations and their choices wanted for this message.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Content">
            <summary>
            Message content.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.Melody">
            <summary>
            One of �text/plain�, �text/x-vcard�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.ExplicitToneSelection">
            <summary>
            Optional explicit tone selection to be signaled.
            The string values of the tone to be sound is specified the table further below and depends on the DECT phone model.
            If this element is used the melody element is obsolete.
            Depending on the DECT phone model not all the strings may work at the DECT phone.
            The string value is not check for correctness.
            Therefore wrong or unknown string values are ignored.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.SignallingVolume">
            <summary>
            Optional acoustical signalling volume parameter when the message is received at the DECT phone (value 0/local volume or 1 till 100% volume), default is 0.
            Please note: If the parameter "ringerTone", "melody", "vibrator", "increasingVolume" or "noInbandSignalling" is set, the default "signallingVolume" is "no tone", equal of the configured setting in the phone.
            In this case a signallingVolume must be specified to have an acoustic ringing.
            To force a message without notification set ringerTone to true and signallingVolume to 0.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.IncreasingVolume">
            <summary>
            �1� or �true�, if increasing volume shall be active, when the message is received at the DECT phone.
            Otherwise the local DECT phone setting is used.
            The default setting is �false�.
            Note: Increasing volume does not work with all used tones.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.VibraCall">
            <summary>
            �1� or �true�, if vibration signalling shall be active, when the message is received at the DECT phone.
            Otherwise the local DECT phone setting is used.
            The default setting is �false�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.DisconnectCallOnReceive">
            <summary>
            Optional parameter to set the DECT phone into idle state prior (e. g. an established call will be disconnected) when the message is received.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.NoInbandSignalling">
            <summary>
            �1� or �true�, if no inband signalling shall be active, when the message is received at the DECT phone.
            Otherwise the local DECT phone setting is used.
            The default setting is �false�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.RingerTone">
            <summary>
            �1� or �true�, if ringer tone shall be active, when the message is received at the DECT phone.
            Otherwise the local DECT phone setting is used.
            The default setting is �false�.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.TextColourR">
            <summary>
            Optional red text message colour parameter when the message is received at the DECT phone (value -1/no red background colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.TextColourG">
            <summary>
            Optional green text message colour parameter when the message is received at the DECT phone (value -1/no green background colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.TextColourB">
            <summary>
            Optional blue text message colour parameter when the message is received at the DECT phone (value -1/no blue background colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.BackgroundColourR">
            <summary>
            Optional red background message colour parameter when the message is received at the DECT phone (value -1/no red text colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.BackgroundColourG">
            <summary>
            Optional green background message colour parameter when the message is received at the DECT phone (value -1/no green text colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="P:mitelapi.Types.MessageType.BackgroundColourB">
            <summary>
            Optional blue background message color parameter when the message is received at the DECT phone (value -1/no blue text colour or 0 till 255), default is -1.
            </summary>
        </member>
        <member name="F:mitelapi.Types.MonitoringStateType.Unknown">
            <summary>
            The user monitoring state of this item is unknown 
            </summary>
        </member>
        <member name="F:mitelapi.Types.MonitoringStateType.Available">
            <summary>
            The user monitoring state of this item is available 
            </summary>
        </member>
        <member name="F:mitelapi.Types.MonitoringStateType.Warning">
            <summary>
            The user monitoring state of this item is warning 
            </summary>
        </member>
        <member name="F:mitelapi.Types.MonitoringStateType.Unavailable">
            <summary>
            The user monitoring state of this item is unavailable 
            </summary>
        </member>
        <member name="F:mitelapi.Types.MonitoringStateType.Escalated">
            <summary>
            The user monitoring state of this item is escalated  
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EAreaFull">
            <summary>
            Paging area is full
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EAuth">
            <summary>
            Authentication failed, e. g. user name or password may be wrong
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EDectRegDomainInvalid">
            <summary>
            A DECT regulatory domain must be set before the request can be performed
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EEncryptNotAllowed">
            <summary>
            DECT encryption cannot be activated because of at least one RFP not supporting encryption is connected.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EExist">
            <summary>
            A field describing a unique attribute does already exist
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EFailed">
            <summary>
            Request could not be fulfilled
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EForbidden">
            <summary>
            This operation is not permitted with that instance
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EInProgress">
            <summary>
            Another transaction is in progress, this request cannot be fulfilled currently
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EInval">
            <summary>
            A field contains invalid data or exceeds a limit
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EInvalidChars">
            <summary>
            A string contains invalid characters.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ELicense">
            <summary>
            Operation cannot be fulfilled because of license restrictions
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ELicenseFile">
            <summary>
            Operation cannot be fulfilled because of license file restrictions
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ELicenseWrongInstallId">
            <summary>
            Operation cannot be fulfilled because of an invalid installation id in the license file
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EMissing">
            <summary>
            A field which is mandatory on this OMM version is missing
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ENoEnt">
            <summary>
            No record found for given key or id
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ENoMem">
            <summary>
            No more data sets can be created
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPerm">
            <summary>
            No sufficient permissions for this request
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwEmpty">
            <summary>
            A required password was not specified.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwSimilarToHost">
            <summary>
            A new given password is too similar to the host name.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwSimilarToName">
            <summary>
            A new given password is too similar to the user name.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwTooManySimilarChars">
            <summary>
            A new given password too many similar characters.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwTooShort">
            <summary>
            A new given password is too short.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwTooSimilar">
            <summary>
            A new given password is too similar to the previous one.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwTooWeak">
            <summary>
            A new given password is too weak.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EPwUnchanged">
            <summary>
            A new given password does not differ to the old one.
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.ETooLong">
            <summary>
            A string is too long
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmError.EWlanRegDomainInvalid">
            <summary>
            A DECT regulatory domain must be set before the request can be performed
            </summary>
        </member>
        <member name="P:mitelapi.Types.OmmPublicKey.Modulus">
            <summary>
            Hexadecimal encoded public key modulus n
            </summary>
        </member>
        <member name="P:mitelapi.Types.OmmPublicKey.Exponent">
            <summary>
            Hexadecimal encoded public key exponent e
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmStbState.None">
            <summary>
            no OMM standby active
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmStbState.OK">
            <summary>
            OMM standby running and active
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmStbState.NotSynchronized">
            <summary>
            OMM standby active but the standby OMM is not visible or the database is not synchronized
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmStbState.DifferentOMMTypes">
            <summary>
            OMM standby active, but OMMs do not fit together
            </summary>
        </member>
        <member name="F:mitelapi.Types.OmmStbState.DifferentOMMVersions">
            <summary>
            OMM standby active, but OMMs do not fit together
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.AllCnfWrite">
            <summary>
            Permission to write to the configuration database, will automatically set permission AllCnfRead
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.AllCnfRead">
            <summary>
            Permission to read all data from configuration database
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.InfoMessaging">
            <summary>
            Permission to send messages only for priority Info and to subscribe to message events
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Messaging">
            <summary>
            Permission to send messages and to subscribe to message events, except with priority Emergency and LocatingAlert; will automatically set permission InfoMessaging.
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Alerting">
            <summary>
            Permission to send messages with priority Emergency, will automatically set permission Messaging and InfoMessaging
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.LocatingAlert">
            <summary>
            Permission to send messages with priority LocatingAlert, will automatically set permission Messaging and InfoMessaging
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Locating">
            <summary>
            Permission to query the position of DECT phones and to track DECT phone positions
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Monitoring">
            <summary>
            Permission to monitor various technical aspects of the mobility system, will automatically set permission AllCnfRead
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Conferencing">
            <summary>
            Permission to use conferencing in the open mobility system will automatically set permission AllCnfRead.
            </summary>
        </member>
        <member name="F:mitelapi.Types.PermissionType.Video">
            <summary>
            Permission to use video in the mobility system, will automatically set permission AllCnfRead.
            </summary>
        </member>
        <member name="T:mitelapi.Types.PPDevType">
            <summary>
            This type contains all data fields of a DECT phone device. 
            It is used in different requests and responses. 
            Not all fields are used in all OMM versions and in all request and response types.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.Ppn">
            <summary>
            Portable part number, unique ID for a DECT phone devices in the OMM. PPNs start at 1, i.e. 0 is an invalid PPN.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.TimeStamp">
            <summary>
            Last change time stamp of this element in seconds since 1970/1/1. 
            When this element is not used in a create or set request the element is only changed when the data record differs 
            from the record already stored in the OMM database.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.RelType">
            <summary>
            Type or state of a relationship to a DECT phone user
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.Uid">
            <summary>
            User ID of the DECT phone user which is linked to this DECT phone device, if any.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.Ipei">
            <summary>
            IPEI, globally unique identifier for a DECT phone. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.AuthenticationCode">
            <summary>
            Authentication code for DECT subscription
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.SubscriptionState">
            <summary>
            DECT subscription state, default = "No"
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.Uak">
            <summary>
            Encrypted UAK value
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.Encrypt">
            <summary>
            Determines whether DECT encryption is enabled
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.CapMessaging">
            <summary>
            Determines whether this device is known to support messaging (read only) 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.CapMessagingForInternalUse">
            <summary>
            Determines whether this device is known to support messaging for internal use only (read only)
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.CapEnhLocating">
            <summary>
            Determines whether this device is able to provide enhanced locating information (read only) 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.CapBluetooth">
            <summary>
            Determines whether this device is able to use blootooth (read only). 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.EthAddr">
            <summary>
            Bluetooth ethernet address, format “00:11:22:aa:bb:cc” (read only). 
            An empty string means no Bluetooth equipment available at this device
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.HwType">
            <summary>
            Detected device type. One of “142d”, “610d”, “620d”, “630d”, “612d”, “622d”, “632d”, “650c”, “740cv”, “GAP”or “Unknown” (read only)
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.PpProfileCapability">
            <summary>
            Determines whether the DECT phone is able to load DECT phone configuration data. This element is read only.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.PpDefaultProfileLoaded">
            <summary>
            the DECT phone has loaded the default DECT phone configuration data set.
            Note: If a user has logged in to this device additional user DECT phone configuration data might have been loaded to this DECT phone.
            In this case the value of this element is set to “0” or “false”. This element is read only
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPDevType.SubscribeToPARIOnly">
            <summary>
            Determines whether the DECT phone shall be subscribed only by using the PARI. 
            This device cannot roam to other OMMs.
            </summary>
        </member>
        <member name="T:mitelapi.Types.PPRelTypeType">
            <summary>
            Describes the type of a relation between a DECT phone device and a DECT phone user 
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPRelTypeType.Unbound">
            <summary>
            This  DECT phone device or  DECT phone user can be bound dynamically, currently it is unbound. 
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPRelTypeType.Dynamic">
            <summary>
            This  DECT phone device or  DECT phone user can be bound dynamically, currently it is bound. 
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPRelTypeType.Fixed">
            <summary>
            This  DECT phone device or  DECT phone user has a fixed relation. 
            </summary>
        </member>
        <member name="T:mitelapi.Types.PPUserSIPEventType">
            <summary>
            This type describes the SIP state of a DECT phone
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPUserSIPEventType.Registration">
            <summary>
            For the user of the DECT phone a SIP registration is started.
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPUserSIPEventType.RegistrationEnd">
            <summary>
            For the user of the DECT phone a SIP registration is ended. The result is contained in PPSIPStateType.
            </summary>
        </member>
        <member name="F:mitelapi.Types.PPUserSIPEventType.Notify">
            <summary>
            For the user of the DECT phone a SIP notification event is received.
            </summary>
        </member>
        <member name="T:mitelapi.Types.PPUserType">
            <summary>
            This type contains all data fields of a DECT phone device. 
            It is used in different requests and responses. 
            Not all fields are used in all OMM versions and in all request and response types.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Uid">
            <summary>
            User ID, numbering starts at 1, 0 is invalid
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.TimeStamp">
            <summary>
            Last change time stamp of this element in seconds since 1970/1/1. 
            When this element is not used in a create or set request the element is only changed when the data record differs from the record already stored in the OMM database.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.RelType">
            <summary>
            Type or state of a relationship to a DECT phone device
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Ppn">
            <summary>
            PPN of the DECT phone device which is linked to this DECT phone user, if any 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Name">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Num">
            <summary>
            Phone number or SIP user ID. Also used as user credential account for the server authentication 
            process to user configuration file on the server (when login=Number in PPLoginVariant). 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Hierarchy1">
            <summary>
            Description hierarchy level 1, free format text. Maximal 16 UTF-8 characters. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Hierarchy2">
            <summary>
            Description hierarchy level 2, free format text. Maximal 16 UTF-8 characters.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.AddId">
            <summary>
            Additional ID/User Login Id, either “AdditonalId”/user pin for the subscription process or “User Login Id” for the DECT phone login process with unbound devices. 
            Also used as user credential account for the server authentication process to user configuration file on the server (when login=Id in PPLoginVariant). 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Pin">
            <summary>
            PIN number, for the DECT phone 
            login process with unbound devices - encrypted with public key
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SipAuthId">
            <summary>
            SIP authentication user
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SipPw">
            <summary>
            SIP authentication password, encrypted with public key
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SosNum">
            <summary>
            SOS number
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.VoiceboxNum">
            <summary>
            Voicebox number 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ManDownNum">
            <summary>
            MANDOWN number
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ForwardState">
            <summary>
            Call forwarding setting
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ForwardTime">
            <summary>
            Time for call forward
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ForwardDest">
            <summary>
            Call forward destination
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Lang">
            <summary>
            User language, read only 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HoldRingBackTime">
            <summary>
            Hold ring back time, 0 for off, time steps 1..5 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.AutoAnswer">
            <summary>
            Auto-answer setting for incoming calls.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.WarningTone">
            <summary>
            Warning tone setting for incoming calls.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.AllowBargeIn">
            <summary>
            Allow barge in setting for incoming calls.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.CallWaitingDisabled">
            <summary>
            Determines whether call waiting is disabled
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.External">
            <summary>
            Determines whether this data set comes from an external server 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.TrackingActive">
            <summary>
            Determines whether the location of this user is being tracked 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Locatable">
            <summary>
            Determines whether the position of this user may be locatable and trackable
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.BTlocatable">
            <summary>
            Determines whether the position of this user may be locatable and trackable by a Bluetooth beacon
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.BTsensitivity">
            <summary>
            Bluetooth module sensitivity. One of “low”, “medium” or “high”
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.LocRight">
            <summary>
            Determines whether this user may locate other users which are locatable
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.MsgRight">
            <summary>
            Determines whether this user may send messages. Default setting is “1”
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SendVcardRight">
            <summary>
            Determines whether this user has the permission to send Vcard entries. Default setting is “1”
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.RecvVcardRight">
            <summary>
            Determines whether this user has the permission to receive Vcard entries
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.KeepLocalPB">
            <summary>
            Determines whether this user may keep the phonebook in the DECT phone after a user logout.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.Vip">
            <summary>
            Determines whether this user is priorisized with its SIP registration
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SipRegisterCheck">
            <summary>
            Determines whether this user is used for the PBX SIP register check. 
            Note: Only one user in the system can be set for this register check. 
            Setting this attribute to “false” results to the default setting (the user with the lowest num will automatically set this attribute to true). 
            Setting this attribute to “true” results to setting this attribute to “false” for the user having this attribute set. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.AllowVideoStream">
            <summary>
            Determines whether this user is is allowed to use video streaming of video devices
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ConferenceServerType">
            <summary>
            Type of the user specific conference server. One of “None”, “External”, “Integrated”, “ExternalBlindTransfer” or “Global”. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ConferenceServerURI">
            <summary>
            URI for the user specific conference server. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.MonitoringMode">
            <summary>
            User monitoring state one of “Off”, “Passive” or Aktive”
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.CUS">
            <summary>
            Current combined user monitoring state (CUS) of all User monitoring states. Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HAS">
            <summary>
            Current user monitoring state of the DECT phone assignment status (HAS). Cannot be set. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HSS">
            <summary>
            Current user monitoring state of the DECT phone subscription status (HSS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HRS">
            <summary>
            Current user monitoring state of the DECT phone registration status (HRS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HCS">
            <summary>
            Current user monitoring state of the DECT phone activity status (HCS). Cannot be set
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SRS">
            <summary>
            Current user monitoring state of the SIP user registration status (SRS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SCS">
            <summary>
            Current user monitoring state of the silent charging status (SCS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.CDS">
            <summary>
            Current user monitoring state of the Call delivery status (CDS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.HBS">
            <summary>
            Current user monitoring state of the DECT phone DECT phone battery status (HBS). Cannot be set. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.BTS">
            <summary>
            Current user monitoring state of the  DECT phone Bluetooth status (BTS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.SWS">
            <summary>
            Current user monitoring state of the  DECT phone software status (SWS). Cannot be set.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.CredentialPw">
            <summary>
            User credential password for user authentication to get the user configuration file from the external server - encrypted with public key.
            This value is used when the access to the user data server requires user credentials, see Set/Get/EventUserDataServer(Cnf). This value is normaly set at  DECT phone during login. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.ConfigurationDataLoaded">
            <summary>
            Determines whether DECT phone user configuration data (DECT phone profile or user specific configuration data) for this user has been downloaded successfully to the  DECT phone. This value is read only.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.PpData">
            <summary>
            Configuration data to be downloaded to the DECT phone for this user. 
            The data consists of a sequence of lines containing one setting per line. 
            E. g.:
                # display-einstellungen
                UD_DispLanguage=en
                UD_DispFont=large
                UD_DispColor=black
                # ringer-einstellungen
                UD_RingerVolumeIntern=level-1
            Maximal size is 4 kByte. 
            Note: Before loading the DECT phone profile data into the  DECT phone the DECT phone configuration data are merged. 
            First the DECT phone default configuration data are used second the DECT phone profile data of this id are used and finally the user individual DECT phone configuration data.
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.PpProfileId">
            <summary>
            Id of the DECT phone profile to be loaded into the  DECT phone for this user. 
            If this value is 0, no profile has to be loaded into the  DECT phone. 
            Note: Before loading the DECT phone profile data into the  DECT phone the DECT phone configuration data are merged.
            First the DECT phone default configuration data are used second the DECT phone profile data of this id are used and finally the user individual DECT phone configuration data. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.FixedSipPort">
            <summary>
            Explicitly used SIP port for registering the user at the call server. If fixedSipPort=0, no specific port is used for this user and the calculatedSipPort is used. 
            </summary>
        </member>
        <member name="P:mitelapi.Types.PPUserType.CalculatedSipPort">
            <summary>
            Calculated SIP port for registering the user at the call server. If calculatedSipPort=0, the fixedSipPort is used. This value is read only.
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPHwTypeType">
            <summary>
            These are possible values for RFPHwTypeType:
            Note: Not all RFP HW types are currently existing or in use!
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.Unknown">
            <summary>
            Hardware type not known
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP31">
            <summary>
            Non WLAN indoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP33">
            <summary>
            Non WLAN outdoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP41">
            <summary>
            WLAN indoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP42">
            <summary>
            WLAN specific DECT (e. g. with encryption) indoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP42US">
            <summary>
            WLAN specific DECT (e. g. with encryption) indoor RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP32">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) indoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP32US">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) indoor RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP34">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) outdoor RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP34US">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) outdoor RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP35">
            <summary>
            Non WLAN indoor 3G RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP36">
            <summary>
            Non WLAN outdoor 3G RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP37">
            <summary>
            Non WLAN outdoor 3G RFP with outside DECT antennas
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP43">
            <summary>
            WLAN indoor 3G RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL33">
            <summary>
            Non WLAN outdoor licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL41">
            <summary>
            WLAN indoor licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL42">
            <summary>
            WLAN specific DECT (e. g. with encryption) indoor licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL42US">
            <summary>
            WLAN specific DECT (e. g. with encryption) indoor licensed RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL32">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) indoor licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL32US">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) indoor licensed RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL34">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) outdoor licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL34US">
            <summary>
            Non WLAN specific DECT (e. g. with encryption) outdoor licensed RFP / US variant
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL35">
            <summary>
            Non WLAN indoor NG licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL36">
            <summary>
            Non WLAN outdoor NG licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL37">
            <summary>
            Non WLAN outdoor NG licensed RFP with outside DECT antennas
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPL43">
            <summary>
            WLAN indoor NG licensed RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPSL36">
            <summary>
            Non WLAN outdoor single cell NG RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPSL37">
            <summary>
            Non WLAN outdoor NG single cell RFP with outside DECT antennas
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFPSL43">
            <summary>
            WLAN indoor NG single cell RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP44">
            <summary>
            Non WLAN indoor 4G-RFP only with 4 DECT channels (“'entry level')
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP45">
            <summary>
            Non WLAN indoor 4G-RFP (“professional”)
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP47">
            <summary>
            Non WLAN indoor 4G-RFP with outside DECT antennas (“directional”)
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.RFP48">
            <summary>
            WLAN indoor 4G-RFP (“dual mode”)
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.PCECM">
            <summary>
            External (linux PC) conference mixer that is handled as an RFP in the OMM
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPHwTypeType.PC">
            <summary>
            undocumented
            </summary>
        </member>
        <member name="T:mitelapi.Types.RfpRadioTypeType">
            <summary>
            These are the possible values for RFPRadioTypeType:
            </summary>
        </member>
        <member name="F:mitelapi.Types.RfpRadioTypeType.None">
            <summary>
            No power limit for this RFP
            </summary>
        </member>
        <member name="F:mitelapi.Types.RfpRadioTypeType.LowTX">
            <summary>
            North American TX power limit
            </summary>
        </member>
        <member name="F:mitelapi.Types.RfpRadioTypeType.NormalTX">
            <summary>
            European TX power limit
            </summary>
        </member>
        <member name="F:mitelapi.Types.RfpRadioTypeType.ConfigurableTX">
            <summary>
            The power limit can be configured
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPStatDataType">
            <summary>
            The type RFPStatDataType contains the elements of one record set of a single RFP.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatDataType.Id">
            <summary>
            Unique RFP identifier. The numbering starts at 0
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatDataType.Counter">
            <summary>
            This string contains all elements of one RFP statistic record as a comma separated list.
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPStatHeadType">
            <summary>
            This type contains information about the RFP statistic elements (counter).
            The different elements are combined to a record set.
            Record set 0 always exists, it contains the overall counter.
            History record sets may be exists.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatHeadType.ElementCount">
            <summary>
            Number of different elements per RFP record
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatHeadType.RecordSetCount">
            <summary>
            Number of history record sets
            Record 0 identifies the overall counter, 1 the current week, 2 the week before the current week and so on
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatHeadType.Resolution">
            <summary>
            resolution of the history data sets
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPStatNameType">
            <summary>
            This type contains the information about a single RFP statistic element.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatNameType.Id">
            <summary>
            Unique element id of a record-element
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatNameType.Group">
            <summary>
            String to identify the different element groups
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPStatNameType.Name">
            <summary>
            Name and meaning of the current element in English
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPSyncStateType">
            <summary>
            These are the possible values for RFPSyncStateType:
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPSyncStateType.Inactive">
            <summary>
            RFP not DECT active
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPSyncStateType.NotSynced">
            <summary>
            RFP is not synchronized
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPSyncStateType.Searching">
            <summary>
            RFP searches for other synchronized RFPs
            </summary>
        </member>
        <member name="F:mitelapi.Types.RFPSyncStateType.Synced">
            <summary>
            RFP is synchronized
            </summary>
        </member>
        <member name="T:mitelapi.Types.RFPType">
            <summary>
            This type contains all configuration data fields and state information about an RFP. It is used in different requests
            and responses defined in this document.Not all fields are used in all OMM versions and in all Request and
            Response types.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Id">
            <summary>
            Unique RFP identifier. The numbering starts at 0
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.EthAddr">
            <summary>
            Ethernet address, format "00:11:22:aa:bb:cc"
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.DectOn">
            <summary>
            „1” or “true”, if DECT is enabled on this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanOn">
            <summary>
            „1” or “true”, if WLAN is enabled on this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.LicenseRFP">
            <summary>
            This RFP is used for licensing, it cannot be deleted
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Name">
            <summary>
            Name of this RFP, free format text
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Hierarchy1">
            <summary>
            Position hierarchy level 1, free format text
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Hierarchy2">
            <summary>
            Position hierarchy level 2, free format text
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Hierarchy3">
            <summary>
            Position hierarchy level 3, free format text
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Hierarchy4">
            <summary>
            Position hierarchy level 4, free format text
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Rpn">
            <summary>
            DECT RPN
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.PagingArea">
            <summary>
            Paging area number, -1 for unassigned
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Cluster">
            <summary>
            Synchronization cluster, 0 is invalid
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.PreferredSync">
            <summary>
            This RFP is preferred in sync start up
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.ReflectiveEnv">
            <summary>
            This RFP is located in a reflective environment
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Site">
            <summary>
            Reference to site data set id.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.X">
            <summary>
            X coordinate for visualization
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Y">
            <summary>
            Y coordinate for visualization
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HwType">
            <summary>
            Type of hardware for this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HwTypeLocked">
            <summary>
            Read only value to indicate the possibility to configure the hwType.
            Until the RFP did not connect ever to the OMM the value is false
            and hwType can be configured.The value never changes from true
            to false!
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanProfile">
            <summary>
            WLAN profile 0 is invalid
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanAntennaDiv">
            <summary>
            „1” or “true”, if WLAN antenna diversity is set
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanAntenna">
            <summary>
            Selected WLAN antenna, 1 or 2
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanChannel">
            <summary>
            Configured WLAN channel, one of 1 to 14, 36, 40, 44, 48, 52, 56,
            60, 64, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 147,
            151, 155, 159, 163, 167, 171
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanHighThroughput">
            <summary>
            "1” or “true”, if WLAN high throughput mode 40 is set
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanPower">
            <summary>
            Cofigured WLAN transmit power in percent, one of 6, 12, 25, 50, 100.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.ConferenceChannels">
            <summary>
            „1” or “true”, if this RFP can be used for conference cahnnels
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.Connected">
            <summary>
            „1” or “true”, if this RFP is connected, transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.IpAddr">
            <summary>
            Current or last known IP address, transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.NewSoftwareRequest">
            <summary>
            „1” or “true”, if this RFP requested the OMM to load new
            software., transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.DectRunning">
            <summary>
            1” or “true”, if the DECT is running on this RFP., transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanRunning">
            <summary>
            „1” or “true”, if the WLAN is running on this RFP, transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.OmmRunning">
            <summary>
            „1” or “true”, if the OMM is running on this RFP, transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.OmmStbRunning">
            <summary>
            „1” or “true”, if the standby OMM is running on this RFP, transient
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HasWlan">
            <summary>
            „1” or “true”, if WLAN is supported by this RFP hardware
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HasEncryption">
            <summary>
            „1” or “true”, if encryption is supported by this RFP hardware
            These features can be configured within a site
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HasAdvancedFeatures">
            <summary>
            „1” or “true”, if Hi-Q audio technology (wide band) G.722, terminal
            video, DECT security and secure SIP are supported by this RFP
            hardware.
            These features can be configured within a site.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.SyncState">
            <summary>
            Current DECT synchronization state for this RFP.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.SwVersion">
            <summary>
            Current software version on this RFP in the format:
            &lt;majorRelease&gt;.&lt;minorRelease&gt;.{RC x | SP y | &lt;bugfixVersion&gt;}
            [Build z] [version description], 
            e. g. „2.1 RC4”, „2.1 SP1”, „2.1.5”, „2.1SP1 Build 2”,r
            „3.0 RC1 Build 1 - OpenMobility SIP 3.0RC1-Internal”.
            RCx: Release candidate number x
            SPy: Release service pack number y
            bugfixVersion: Old bugfix release version number
            Build z: Build release number z for internal use
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.BrandingMismatch">
            <summary>
            „1” or “true”, if branding of this RFP and OMM do not fit together
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.VersionMismatch">
            <summary>
            „1” or “true”, if software version of this RFP and OMM do not fit
            together
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.StbMismatch">
            <summary>
            „1” or “true”, if this RFP has an invalid OMM standby
            configuration.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanLinkNok">
            <summary>
            „1” or “true”, if the Ethernet link is too slow ( e. g. only 10 MBit/s)
            to enable WLAN on this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanChannelUsed">
            <summary>
            Used Channel one of 1 to 14, 36, 40, 44, 48, 52, 56, 60, 64, 100,
            104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 147, 151, 155,
            159, 163, 167, 171.
            This value is read only.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanHighThroughputTypeUsed">
            <summary>
            Used high throughput channel type, one of “None”, “HT20”,
            “HT40Minus” or “HT40Plus” .
            This value is read only.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.WlanPowerUsed">
            <summary>
            Used WLAN transmit power in DBM (decibel per milliwatt) .
            This value is read only.
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.NSyncRels">
            <summary>
            Number of DECT synchronization relations
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.RadioType">
            <summary>
            The DECT radio type of this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.OutdoorType">
            <summary>
            „1” or “true”, if this is an outdoor RFP hardware
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.HasFreqShift">
            <summary>
            „1” or “true”, if frequency shift is supported for this RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.RFPType.EncryptionActive">
            <summary>
            Flag indicating if the connection to the RFP is encrypted.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Cmd">
            <summary>
            “On” to set the subscription flag, “Off” to reset it.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Event">
            <summary>
            The event type.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Ppn">
            <summary>
            The subscription command is valid for this DECT phone device.
            If it is –1, the command automatically refers to all items.
            If it is missing, no items are included.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Uid">
            <summary>
            The subscription command is valid for this DECT phone user.
            If it is –1, the command automatically refers to all items.
            If it is missing, no items are included.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.RfpId">
            <summary>
            The subscription command is valid for this RFP.
            If it is –1, the command automatically refers to all RFPs.
            If it is missing, no RFPs are included.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Omm">
            <summary>
            The subscription command is valid for the OMM if this field has the value -1.
            If it is missing, the OMM is not included.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Trigger">
            <summary>
            Alarm triggers the client is interested in.
            If it is an empty String (“*”), the commands automatically refers to all alarm triggers.
            If it is missing, no triggers are included.
            Wildcards like “LOC-*” are also allowed.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SubscribeCmdType.Scheme">
            <summary>
            Address scheme the client is interested in (without ':').
            If it is an empty String (“*”), the commands automatically refers to all address schemes.
            If it is missing, no address scheme is included.
            </summary>
        </member>
        <member name="T:mitelapi.Types.SyncOffsetType">
            <summary>
            This type contains the synchronization offset from an RFP to its neighbors. It has following attributes:
            If the attribute lost is set to true, this relation must be removed from the set of relations which may be stored at
            client side.
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncOffsetType.Id">
            <summary>
            RFP ID of neighbor RFP
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncOffsetType.Offset">
            <summary>
            Time offset in ns
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncOffsetType.Rssi">
            <summary>
            RSSI in dBm, e. g. –75
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncOffsetType.Lost">
            <summary>
            „1” or “true”, if this relation has been lost
            </summary>
        </member>
        <member name="T:mitelapi.Types.SyncQualityType">
            <summary>
            This type contains the SYNC quality data of an RFP. It has following attributes:
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncQualityType.Id">
            <summary>
            RFP id
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncQualityType.StrongRels">
            <summary>
            Number of relations with an RSSI-value greater than -73dBm
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncQualityType.LowRels">
            <summary>
            Number of relations with an RSSI-value less than -73dB
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncQualityType.MaxRSSI">
            <summary>
            Maximum RSSI value (in dBm) of the strong relations
            </summary>
        </member>
        <member name="P:mitelapi.Types.SyncQualityType.MinRSSI">
            <summary>
            Minimum RSSI value (in dBm) of the low relations
            </summary>
        </member>
        <member name="T:mitelapi.Types.VisibilityType">
            <summary>
            This type contains all data fields which describe the visibility of an RFP to a DECT phone.
            </summary>
        </member>
        <member name="P:mitelapi.Types.VisibilityType.Id">
            <summary>
            ID of RFP which can be seen by the DECT phone
            </summary>
        </member>
        <member name="P:mitelapi.Types.VisibilityType.RssiAvg">
            <summary>
            Filtered RSSI value in negative form, e.g. "-75" for �75 dBm
            </summary>
        </member>
    </members>
</doc>
